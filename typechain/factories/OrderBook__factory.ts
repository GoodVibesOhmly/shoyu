/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OrderBook } from "../OrderBook";

export class OrderBook__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OrderBook> {
    return super.deploy(overrides || {}) as Promise<OrderBook>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrderBook {
    return super.attach(address) as OrderBook;
  }
  connect(signer: Signer): OrderBook__factory {
    return super.connect(signer) as OrderBook__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderBook {
    return new Contract(address, _abi, signerOrProvider) as OrderBook;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "SubmitOrder",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "submitOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063318bbcf31461003b5780639c3f1e9014610061575b600080fd5b61004e61004936600461048e565b61008c565b6040519081526020015b60405180910390f35b61007461006f36600461059a565b610200565b6040516100589c9b9a999897969594939291906105b2565b60408051610180810182523381526001600160a01b038a8116602083015291810189905260608101889052868216608082015285821660a082015290841660c082015260e081018390526101008101829052600061012082018190526101408201819052610160820181905290610102816102ff565b60008181526020818152604091829020845181546001600160a01b03199081166001600160a01b03928316178355868401516001840180548316918416919091179055938601516002830155606086015160038301556080860151600483018054861691831691909117905560a0860151600583018054861691831691909117905560c086015160068301805490951691161790925560e08401516007830155610100840151805193955084936101bf92600885019201906103de565b5061012082015160098201805460ff191660ff909216919091179055610140820151600a82015561016090910151600b909101555098975050505050505050565b6000602081905290815260409020805460018201546002830154600384015460048501546005860154600687015460078801546008890180546001600160a01b03998a169a988a169997989697958616969486169590931693919261026490610673565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610673565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b505050506009830154600a840154600b90940154929360ff909116929091508c565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a01516101008b01518051908a0120965160009a6103c09a7f17fdf8831f8bd77353b30f42ba9bc64e7144545a42a890389f298feeb45dec889a9199919897969594939201998a526001600160a01b0398891660208b015296881660408a01526060890195909552608088019390935290851660a0870152841660c086015290921660e08401526101008301919091526101208201526101400190565b6040516020818303038152906040528051906020012090505b919050565b8280546103ea90610673565b90600052602060002090601f01602090048101928261040c5760008555610452565b82601f1061042557805160ff1916838001178555610452565b82800160010185558215610452579182015b82811115610452578251825591602001919060010190610437565b5061045e929150610462565b5090565b5b8082111561045e5760008155600101610463565b80356001600160a01b03811681146103d957600080fd5b600080600080600080600080610100898b0312156104aa578384fd5b6104b389610477565b975060208901359650604089013595506104cf60608a01610477565b94506104dd60808a01610477565b93506104eb60a08a01610477565b925060c0890135915060e089013567ffffffffffffffff8082111561050e578283fd5b818b0191508b601f830112610521578283fd5b813581811115610533576105336106ae565b604051601f8201601f19908116603f0116810190838211818310171561055b5761055b6106ae565b816040528281528e6020848701011115610573578586fd5b82602086016020830137856020848301015280955050505050509295985092959890939650565b6000602082840312156105ab578081fd5b5035919050565b600060018060a01b03808f168352808e1660208401528c60408401528b6060840152808b166080840152808a1660a084015280891660c0840152508660e0830152610180610100830152855180610180840152815b818110156106255760208189018101516101a0868401015201610607565b8181111561063757826101a083860101525b50601f01601f191682016101a001905061065761012083018660ff169052565b61014082019390935261016001529a9950505050505050505050565b600181811c9082168061068757607f821691505b602082108114156106a857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f881ee65e2deb4d243b24ac7f753f2e229096cc009c87c751f6c37c0a399d56464736f6c63430008030033";
