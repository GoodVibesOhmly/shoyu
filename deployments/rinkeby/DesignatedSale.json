{
  "address": "0xFc7D3C1cd94a2a06a550b22D0aFB290bb17A8f06",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "canBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidPrice",
          "type": "uint256"
        }
      ],
      "name": "canExecute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xbe37e139c048105c9a5eabc18eab297a7a0330966905384ed32685a12bacaa96",
  "receipt": {
    "to": null,
    "from": "0x80417137E490A5091dCAB34E85C457BB97c93161",
    "contractAddress": "0xFc7D3C1cd94a2a06a550b22D0aFB290bb17A8f06",
    "transactionIndex": 14,
    "gasUsed": "220610",
    "logsBloom": "0x
    "blockHash": "0x81388e4a5495feb608194756b1b71a45ffc7c9059b20fd0dad32c9977b7540ef",
    "transactionHash": "0xbe37e139c048105c9a5eabc18eab297a7a0330966905384ed32685a12bacaa96",
    "logs": [],
    "blockNumber": 9143878,
    "cumulativeGasUsed": "5779618",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "409914cef0eb1a17c21b9b3d747a0637",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"canBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"}],\"name\":\"canExecute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/DesignatedSale.sol\":\"DesignatedSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"../libraries/Orders.sol\\\";\\n\\ninterface IStrategy {\\n    function canExecute(\\n        uint256 deadline,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice\\n    ) external view returns (bool);\\n\\n    function canBid(\\n        uint256 deadline,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice,\\n        uint256 bestBidPrice,\\n        uint256 bestBidBlock\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0c379707f5d112df6ac23a176e2d77b127b756c0a765f2eb3f10f6ab7c30212f\",\"license\":\"MIT\"},\"contracts/libraries/Orders.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nlibrary Orders {\\n    // keccak256(\\\"Ask(address signer,address token,uint256 tokenId,uint256 amount,address strategy,address currency,address recipient,uint256 deadline,bytes params)\\\")\\n    bytes32 internal constant ASK_TYPEHASH = 0x17fdf8831f8bd77353b30f42ba9bc64e7144545a42a890389f298feeb45dec88;\\n    // keccak256(\\\"Bid(bytes32 askHash,address signer,uint256 amount,uint256 price,address recipient,address referrer)\\\")\\n    bytes32 internal constant BID_TYPEHASH = 0xb98e1dc48988064e6dfb813618609d7da80a8841e5f277039788ac4b50d497b2;\\n\\n    struct Ask {\\n        address signer;\\n        address token;\\n        uint256 tokenId;\\n        uint256 amount;\\n        address strategy;\\n        address currency;\\n        address recipient;\\n        uint256 deadline;\\n        bytes params;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    struct Bid {\\n        bytes32 askHash;\\n        address signer;\\n        uint256 amount;\\n        uint256 price;\\n        address recipient;\\n        address referrer;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    function hash(Ask memory ask) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    ASK_TYPEHASH,\\n                    ask.signer,\\n                    ask.token,\\n                    ask.tokenId,\\n                    ask.amount,\\n                    ask.strategy,\\n                    ask.currency,\\n                    ask.recipient,\\n                    ask.deadline,\\n                    keccak256(ask.params)\\n                )\\n            );\\n    }\\n\\n    function hash(Bid memory bid) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(BID_TYPEHASH, bid.askHash, bid.signer, bid.amount, bid.price, bid.recipient, bid.referrer)\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xa35b519fac6ea626cc3b133907138ed75f3389c0a1bb4f771cfd5ec820caca23\",\"license\":\"MIT\"},\"contracts/strategies/DesignatedSale.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nimport \\\"../interfaces/IStrategy.sol\\\";\\n\\ncontract DesignatedSale is IStrategy {\\n    function canExecute(\\n        uint256,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice\\n    ) external pure override returns (bool) {\\n        (uint256 minPrice, address designee) = abi.decode(params, (uint256, address));\\n        require(designee != address(0), \\\"SHOYU: INVALID_DESIGNEE\\\");\\n\\n        return minPrice <= bidPrice && bidder == designee;\\n    }\\n\\n    function canBid(\\n        uint256,\\n        bytes memory,\\n        address,\\n        uint256,\\n        uint256,\\n        uint256\\n    ) external pure override returns (bool) {\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0x3233668cb793227ce6e6a9374d308fabde260838a681d6f0b52d4efe84f45e97\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610307806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636281869a1461003b578063e01be26314610069575b600080fd5b610055610049366004610230565b60009695505050505050565b604051901515815260200160405180910390f35b6100556100773660046101d1565b60008060008580602001905181019061009091906101a2565b90925090506001600160a01b0381166100ef5760405162461bcd60e51b815260206004820152601760248201527f53484f59553a20494e56414c49445f44455349474e4545000000000000000000604482015260640160405180910390fd5b8382111580156101105750806001600160a01b0316856001600160a01b0316145b979650505050505050565b600082601f83011261012b578081fd5b813567ffffffffffffffff80821115610146576101466102a3565b604051601f8301601f19908116603f0116810190828211818310171561016e5761016e6102a3565b81604052838152866020858801011115610186578485fd5b8360208701602083013792830160200193909352509392505050565b600080604083850312156101b4578182fd5b8251915060208301516101c6816102b9565b809150509250929050565b600080600080608085870312156101e6578182fd5b84359350602085013567ffffffffffffffff811115610203578283fd5b61020f8782880161011b565b9350506040850135610220816102b9565b9396929550929360600135925050565b60008060008060008060c08789031215610248578182fd5b86359550602087013567ffffffffffffffff811115610265578283fd5b61027189828a0161011b565b9550506040870135610282816102b9565b959894975094956060810135955060808101359460a0909101359350915050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146102ce57600080fd5b5056fea2646970667358221220b868194f0ed889515891e0b70ff8ca2a149a11abf901320f7d0f7d8f06847b9564736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636281869a1461003b578063e01be26314610069575b600080fd5b610055610049366004610230565b60009695505050505050565b604051901515815260200160405180910390f35b6100556100773660046101d1565b60008060008580602001905181019061009091906101a2565b90925090506001600160a01b0381166100ef5760405162461bcd60e51b815260206004820152601760248201527f53484f59553a20494e56414c49445f44455349474e4545000000000000000000604482015260640160405180910390fd5b8382111580156101105750806001600160a01b0316856001600160a01b0316145b979650505050505050565b600082601f83011261012b578081fd5b813567ffffffffffffffff80821115610146576101466102a3565b604051601f8301601f19908116603f0116810190828211818310171561016e5761016e6102a3565b81604052838152866020858801011115610186578485fd5b8360208701602083013792830160200193909352509392505050565b600080604083850312156101b4578182fd5b8251915060208301516101c6816102b9565b809150509250929050565b600080600080608085870312156101e6578182fd5b84359350602085013567ffffffffffffffff811115610203578283fd5b61020f8782880161011b565b9350506040850135610220816102b9565b9396929550929360600135925050565b60008060008060008060c08789031215610248578182fd5b86359550602087013567ffffffffffffffff811115610265578283fd5b61027189828a0161011b565b9550506040870135610282816102b9565b959894975094956060810135955060808101359460a0909101359350915050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146102ce57600080fd5b5056fea2646970667358221220b868194f0ed889515891e0b70ff8ca2a149a11abf901320f7d0f7d8f06847b9564736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}