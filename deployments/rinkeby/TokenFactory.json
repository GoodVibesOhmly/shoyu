{
  "address": "0x45c2F9746360c0B343769c6215837030B90B1fDf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocolFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "protocolFee",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "operationalFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "operationalFee",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_baseURI721",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI1155",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "royaltyFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyFee",
          "type": "uint8"
        }
      ],
      "name": "DeployNFT1155",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "royaltyFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyFee",
          "type": "uint8"
        }
      ],
      "name": "DeployNFT721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "royaltyFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyFee",
          "type": "uint8"
        }
      ],
      "name": "DeployNFT721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dividendToken",
          "type": "address"
        }
      ],
      "name": "DeploySocialToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "tag",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tagNonce",
          "type": "uint256"
        }
      ],
      "name": "Tag",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "UpgradeERC1155Exchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "UpgradeERC721Exchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "UpgradeNFT1155",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "UpgradeNFT721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "UpgradeSocialToken",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_OPERATIONAL_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_ROYALTY_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NFT1155_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NFT721_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI1155",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI721",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "royaltyFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "royaltyFee",
          "type": "uint8"
        }
      ],
      "name": "deployNFT1155",
      "outputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "royaltyFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "royaltyFee",
          "type": "uint8"
        }
      ],
      "name": "deployNFT721",
      "outputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "royaltyFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "royaltyFee",
          "type": "uint8"
        }
      ],
      "name": "deployNFT721",
      "outputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "dividendToken",
          "type": "address"
        }
      ],
      "name": "deploySocialToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc1155Exchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721Exchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDeployerWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "query",
          "type": "address"
        }
      ],
      "name": "isNFT1155",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "query",
          "type": "address"
        }
      ],
      "name": "isNFT721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "query",
          "type": "address"
        }
      ],
      "name": "isSocialToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStrategyWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "mint1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "mint721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "string[]",
          "name": "tags",
          "type": "string[]"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "mintWithTags1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "string[]",
          "name": "tags",
          "type": "string[]"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "mintWithTags721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces1155",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces721",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operationalFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "permil",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "permil",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setBaseURI1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setBaseURI721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "setDeployerWhitelisted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "operationalFee",
          "type": "uint8"
        }
      ],
      "name": "setOperationalFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operationalFeeRecipient",
          "type": "address"
        }
      ],
      "name": "setOperationalFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "setProtocolFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "setStrategyWhitelisted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "tags",
          "type": "string[]"
        }
      ],
      "name": "setTags1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "tags",
          "type": "string[]"
        }
      ],
      "name": "setTags721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tagNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "upgradeERC1155Exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "upgradeERC721Exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "upgradeNFT1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "upgradeNFT721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "upgradeSocialToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdf7f9e6c6964243f1c0611e75f54cb8fb43e91733e5576b8280f1be9e8e0f62e",
  "receipt": {
    "to": null,
    "from": "0x80417137E490A5091dCAB34E85C457BB97c93161",
    "contractAddress": "0x45c2F9746360c0B343769c6215837030B90B1fDf",
    "transactionIndex": 17,
    "gasUsed": "2982387",
    "logsBloom": "0x
    "blockHash": "0xddee58c2bcabe7a6688fde844152b733970969052398d878226060f3ff34a6da",
    "transactionHash": "0xdf7f9e6c6964243f1c0611e75f54cb8fb43e91733e5576b8280f1be9e8e0f62e",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 9143867,
        "transactionHash": "0xdf7f9e6c6964243f1c0611e75f54cb8fb43e91733e5576b8280f1be9e8e0f62e",
        "address": "0x45c2F9746360c0B343769c6215837030B90B1fDf",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000080417137e490a5091dcab34e85c457bb97c93161"
        ],
        "data": "0x",
        "logIndex": 24,
        "blockHash": "0xddee58c2bcabe7a6688fde844152b733970969052398d878226060f3ff34a6da"
      }
    ],
    "blockNumber": 9143867,
    "cumulativeGasUsed": "13457556",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x93c7020393df59A951217d92d982d67A34a1557D",
    25,
    "0x93c7020393df59A951217d92d982d67A34a1557D",
    0,
    "https://raw.githubusercontent.com/shoyunft/metadata/master/rinkeby/",
    "https://raw.githubusercontent.com/shoyunft/metadata/master/rinkeby/"
  ],
  "solcInputHash": "409914cef0eb1a17c21b9b3d747a0637",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"protocolFee\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operationalFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"operationalFee\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_baseURI721\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI1155\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"royaltyFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyFee\",\"type\":\"uint8\"}],\"name\":\"DeployNFT1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"royaltyFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyFee\",\"type\":\"uint8\"}],\"name\":\"DeployNFT721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"royaltyFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyFee\",\"type\":\"uint8\"}],\"name\":\"DeployNFT721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dividendToken\",\"type\":\"address\"}],\"name\":\"DeploySocialToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"tag\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tagNonce\",\"type\":\"uint256\"}],\"name\":\"Tag\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"UpgradeERC1155Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"UpgradeERC721Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"UpgradeNFT1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"UpgradeNFT721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"UpgradeSocialToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OPERATIONAL_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_ROYALTY_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT1155_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT721_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI1155\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI721\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"royaltyFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"royaltyFee\",\"type\":\"uint8\"}],\"name\":\"deployNFT1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"royaltyFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"royaltyFee\",\"type\":\"uint8\"}],\"name\":\"deployNFT721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"royaltyFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"royaltyFee\",\"type\":\"uint8\"}],\"name\":\"deployNFT721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"dividendToken\",\"type\":\"address\"}],\"name\":\"deploySocialToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc1155Exchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721Exchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDeployerWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"query\",\"type\":\"address\"}],\"name\":\"isNFT1155\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"query\",\"type\":\"address\"}],\"name\":\"isNFT721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"query\",\"type\":\"address\"}],\"name\":\"isSocialToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStrategyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"mint1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"mint721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"mintWithTags1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"mintWithTags721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces1155\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces721\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operationalFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permil\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permil\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseURI1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseURI721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"setDeployerWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"operationalFee\",\"type\":\"uint8\"}],\"name\":\"setOperationalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operationalFeeRecipient\",\"type\":\"address\"}],\"name\":\"setOperationalFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"setProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"setStrategyWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"}],\"name\":\"setTags1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"}],\"name\":\"setTags721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tagNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"upgradeERC1155Exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"upgradeERC721Exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"upgradeNFT1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"upgradeNFT721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"upgradeSocialToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFactory.sol\":\"TokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/TokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/ITokenFactory.sol\\\";\\nimport \\\"./interfaces/IBaseNFT721.sol\\\";\\nimport \\\"./interfaces/IBaseNFT1155.sol\\\";\\nimport \\\"./base/ProxyFactory.sol\\\";\\nimport \\\"./libraries/Signature.sol\\\";\\n\\ncontract TokenFactory is ProxyFactory, Ownable, ITokenFactory {\\n    uint8 public constant override MAX_ROYALTY_FEE = 250; // 25%\\n    uint8 public constant override MAX_OPERATIONAL_FEE = 50; // 5%\\n    // keccak256(\\\"NFT721(address nft,address to,uint256 tokenId,bytes data,uint256 nonce)\\\");\\n    bytes32 public constant override NFT721_TYPEHASH =\\n        0xc168906d06f61a0b44a8e4e89e114a285237f3c7eb34b490a56feeefe2ce3eef;\\n    // keccak256(\\\"NFT1155(address nft,address to,uint256 tokenId,uint256 amount,bytes data,uint256 nonce)\\\");\\n    bytes32 public constant override NFT1155_TYPEHASH =\\n        0xa775fac8298714a0a727dc16ef93dfe9da2c45e1cd7f3e9fec481134044c4c7a;\\n    bytes32 internal immutable _DOMAIN_SEPARATOR;\\n    uint256 internal immutable _CACHED_CHAIN_ID;\\n\\n    address[] internal _targets721;\\n    address[] internal _targets1155;\\n    address[] internal _targetsSocialToken;\\n\\n    address internal _protocolFeeRecipient;\\n    uint8 internal _protocolFee; // out of 1000\\n    address internal _operationalFeeRecipient;\\n    uint8 internal _operationalFee; // out of 1000\\n\\n    mapping(address => uint256) public override nonces721;\\n    mapping(address => uint256) public override nonces1155;\\n\\n    string public override baseURI721;\\n    string public override baseURI1155;\\n\\n    address public override erc721Exchange;\\n    address public override erc1155Exchange;\\n    // any account can deploy proxies if isDeployerWhitelisted[0x0000000000000000000000000000000000000000] == true\\n    mapping(address => bool) public override isDeployerWhitelisted;\\n    mapping(address => bool) public override isStrategyWhitelisted;\\n\\n    mapping(address => mapping(uint256 => uint256)) public tagNonces;\\n\\n    modifier onlyDeployer {\\n        require(isDeployerWhitelisted[address(0)] || isDeployerWhitelisted[msg.sender], \\\"SHOYU: FORBIDDEN\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address protocolFeeRecipient,\\n        uint8 protocolFee,\\n        address operationalFeeRecipient,\\n        uint8 operationalFee,\\n        string memory _baseURI721,\\n        string memory _baseURI1155\\n    ) {\\n        _protocolFeeRecipient = protocolFeeRecipient;\\n        _protocolFee = protocolFee;\\n        _operationalFeeRecipient = operationalFeeRecipient;\\n        _operationalFee = operationalFee;\\n\\n        baseURI721 = _baseURI721;\\n        baseURI1155 = _baseURI1155;\\n\\n        _CACHED_CHAIN_ID = block.chainid;\\n        _DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                // keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)')\\n                0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f,\\n                keccak256(\\\"TokenFactory\\\"),\\n                0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6, // keccak256(bytes(\\\"1\\\"))\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view override returns (bytes32) {\\n        bytes32 domainSeparator;\\n        if (_CACHED_CHAIN_ID == block.chainid) domainSeparator = _DOMAIN_SEPARATOR;\\n        else {\\n            domainSeparator = keccak256(\\n                abi.encode(\\n                    // keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)')\\n                    0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f,\\n                    keccak256(\\\"TokenFactory\\\"),\\n                    0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6, // keccak256(bytes(\\\"1\\\"))\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n        }\\n        return domainSeparator;\\n    }\\n\\n    function protocolFeeInfo() external view override returns (address recipient, uint8 permil) {\\n        return (_protocolFeeRecipient, _protocolFee);\\n    }\\n\\n    function operationalFeeInfo() external view override returns (address recipient, uint8 permil) {\\n        return (_operationalFeeRecipient, _operationalFee);\\n    }\\n\\n    function setBaseURI721(string memory uri) external override onlyOwner {\\n        baseURI721 = uri;\\n    }\\n\\n    function setBaseURI1155(string memory uri) external override onlyOwner {\\n        baseURI1155 = uri;\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function setProtocolFeeRecipient(address protocolFeeRecipient) external override onlyOwner {\\n        require(protocolFeeRecipient != address(0), \\\"SHOYU: INVALID_FEE_RECIPIENT\\\");\\n\\n        _protocolFeeRecipient = protocolFeeRecipient;\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function setOperationalFeeRecipient(address operationalFeeRecipient) external override onlyOwner {\\n        require(operationalFeeRecipient != address(0), \\\"SHOYU: INVALID_RECIPIENT\\\");\\n\\n        _operationalFeeRecipient = operationalFeeRecipient;\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function setOperationalFee(uint8 operationalFee) external override onlyOwner {\\n        require(operationalFee <= MAX_OPERATIONAL_FEE, \\\"SHOYU: INVALID_FEE\\\");\\n\\n        _operationalFee = operationalFee;\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function setDeployerWhitelisted(address deployer, bool whitelisted) external override onlyOwner {\\n        isDeployerWhitelisted[deployer] = whitelisted;\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function setStrategyWhitelisted(address strategy, bool whitelisted) external override onlyOwner {\\n        require(strategy != address(0), \\\"SHOYU: INVALID_ADDRESS\\\");\\n\\n        isStrategyWhitelisted[strategy] = whitelisted;\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function upgradeNFT721(address newTarget) external override onlyOwner {\\n        _targets721.push(newTarget);\\n\\n        emit UpgradeNFT721(newTarget);\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function upgradeNFT1155(address newTarget) external override onlyOwner {\\n        _targets1155.push(newTarget);\\n\\n        emit UpgradeNFT1155(newTarget);\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function upgradeSocialToken(address newTarget) external override onlyOwner {\\n        _targetsSocialToken.push(newTarget);\\n\\n        emit UpgradeSocialToken(newTarget);\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function upgradeERC721Exchange(address exchange) external override onlyOwner {\\n        erc721Exchange = exchange;\\n\\n        emit UpgradeERC721Exchange(exchange);\\n    }\\n\\n    // This function should be called by a multi-sig `owner`, not an EOA\\n    function upgradeERC1155Exchange(address exchange) external override onlyOwner {\\n        erc1155Exchange = exchange;\\n\\n        emit UpgradeERC1155Exchange(exchange);\\n    }\\n\\n    function deployNFT721(\\n        address owner,\\n        string calldata name,\\n        string calldata symbol,\\n        uint256[] memory tokenIds,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    ) external override onlyDeployer returns (address nft) {\\n        require(bytes(name).length > 0, \\\"SHOYU: INVALID_NAME\\\");\\n        require(bytes(symbol).length > 0, \\\"SHOYU: INVALID_SYMBOL\\\");\\n\\n        nft = _createProxy(\\n            _targets721[_targets721.length - 1],\\n            abi.encodeWithSignature(\\n                \\\"initialize(address,string,string,uint256[],address,uint8)\\\",\\n                owner,\\n                name,\\n                symbol,\\n                tokenIds,\\n                royaltyFeeRecipient,\\n                royaltyFee\\n            )\\n        );\\n\\n        emit DeployNFT721(nft, owner, name, symbol, tokenIds, royaltyFeeRecipient, royaltyFee);\\n    }\\n\\n    function deployNFT721(\\n        address owner,\\n        string calldata name,\\n        string calldata symbol,\\n        uint256 toTokenId,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    ) external override onlyDeployer returns (address nft) {\\n        require(bytes(name).length > 0, \\\"SHOYU: INVALID_NAME\\\");\\n        require(bytes(symbol).length > 0, \\\"SHOYU: INVALID_SYMBOL\\\");\\n\\n        nft = _createProxy(\\n            _targets721[_targets721.length - 1],\\n            abi.encodeWithSignature(\\n                \\\"initialize(address,string,string,uint256,address,uint8)\\\",\\n                owner,\\n                name,\\n                symbol,\\n                toTokenId,\\n                royaltyFeeRecipient,\\n                royaltyFee\\n            )\\n        );\\n\\n        emit DeployNFT721(nft, owner, name, symbol, toTokenId, royaltyFeeRecipient, royaltyFee);\\n    }\\n\\n    function isNFT721(address query) external view override returns (bool result) {\\n        for (uint256 i = _targets721.length - 1; i >= 0; i--) {\\n            if (_isProxy(_targets721[i], query)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function deployNFT1155(\\n        address owner,\\n        uint256[] memory tokenIds,\\n        uint256[] memory amounts,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    ) external override onlyDeployer returns (address nft) {\\n        nft = _createProxy(\\n            _targets1155[_targets1155.length - 1],\\n            abi.encodeWithSignature(\\n                \\\"initialize(address,uint256[],uint256[],address,uint8)\\\",\\n                owner,\\n                tokenIds,\\n                amounts,\\n                royaltyFeeRecipient,\\n                royaltyFee\\n            )\\n        );\\n\\n        emit DeployNFT1155(nft, owner, tokenIds, amounts, royaltyFeeRecipient, royaltyFee);\\n    }\\n\\n    function isNFT1155(address query) external view override returns (bool result) {\\n        for (uint256 i = _targets1155.length - 1; i >= 0; i--) {\\n            if (_isProxy(_targets1155[i], query)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function deploySocialToken(\\n        address owner,\\n        string memory name,\\n        string memory symbol,\\n        address dividendToken\\n    ) external override onlyDeployer returns (address proxy) {\\n        bytes memory initData =\\n            abi.encodeWithSignature(\\\"initialize(address,string,string,address)\\\", owner, name, symbol, dividendToken);\\n        proxy = _createProxy(_targetsSocialToken[_targetsSocialToken.length - 1], initData);\\n\\n        emit DeploySocialToken(proxy, owner, name, symbol, dividendToken);\\n    }\\n\\n    function isSocialToken(address query) external view override returns (bool result) {\\n        for (uint256 i = _targetsSocialToken.length - 1; i >= 0; i--) {\\n            if (_isProxy(_targetsSocialToken[i], query)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function mint721(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public override {\\n        address owner = IBaseNFT721(nft).owner();\\n        bytes32 hash = keccak256(abi.encode(NFT721_TYPEHASH, nft, to, tokenId, data, nonces721[owner]++));\\n        Signature.verify(hash, owner, v, r, s, DOMAIN_SEPARATOR());\\n        IBaseNFT721(nft).mint(to, tokenId, data);\\n    }\\n\\n    function mint1155(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes memory data,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public override {\\n        address owner = IBaseNFT1155(nft).owner();\\n        bytes32 hash = keccak256(abi.encode(NFT1155_TYPEHASH, nft, to, tokenId, amount, data, nonces1155[owner]++));\\n        Signature.verify(hash, owner, v, r, s, DOMAIN_SEPARATOR());\\n        IBaseNFT1155(nft).mint(to, tokenId, amount, data);\\n    }\\n\\n    function mintWithTags721(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data,\\n        string[] memory tags,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        mint721(nft, to, tokenId, data, v, r, s);\\n        _setTags(nft, tokenId, tags);\\n    }\\n\\n    function mintWithTags1155(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes memory data,\\n        string[] memory tags,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        mint1155(nft, to, tokenId, amount, data, v, r, s);\\n        _setTags(nft, tokenId, tags);\\n    }\\n\\n    function setTags721(\\n        address nft,\\n        uint256 tokenId,\\n        string[] memory tags\\n    ) external override {\\n        require(IBaseNFT721(nft).ownerOf(tokenId) == msg.sender, \\\"SHOYU: FORBIDDEN\\\");\\n        _setTags(nft, tokenId, tags);\\n    }\\n\\n    function setTags1155(\\n        address nft,\\n        uint256 tokenId,\\n        string[] memory tags\\n    ) external override {\\n        require(IBaseNFT1155(nft).balanceOf(msg.sender, tokenId) > 0, \\\"SHOYU: FORBIDDEN\\\");\\n        _setTags(nft, tokenId, tags);\\n    }\\n\\n    function _setTags(\\n        address nft,\\n        uint256 tokenId,\\n        string[] memory tags\\n    ) internal {\\n        uint256 nonce = tagNonces[nft][tokenId]++;\\n\\n        for (uint256 i; i < tags.length; i++) {\\n            emit Tag(nft, tokenId, tags[i], nonce);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x70bdf440cbb65a936d0cb1d6b5d66a33f0fca632a0bae4f2847618d8b293562a\",\"license\":\"MIT\"},\"contracts/base/ProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\n// Reference: https://github.com/optionality/clone-factory/blob/master/contracts/CloneFactory.sol\\ncontract ProxyFactory {\\n    function _createProxy(address target, bytes memory initData) internal returns (address proxy) {\\n        bytes20 targetBytes = bytes20(target);\\n        assembly {\\n            let clone := mload(0x40)\\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(clone, 0x14), targetBytes)\\n            mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            proxy := create(0, clone, 0x37)\\n        }\\n\\n        if (initData.length > 0) {\\n            (bool success, ) = proxy.call(initData);\\n            require(success, \\\"SHOYU: CALL_FAILURE\\\");\\n        }\\n    }\\n\\n    function _isProxy(address target, address query) internal view returns (bool result) {\\n        bytes20 targetBytes = bytes20(target);\\n        assembly {\\n            let clone := mload(0x40)\\n            mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\\n            mstore(add(clone, 0xa), targetBytes)\\n            mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n\\n            let other := add(clone, 0x40)\\n            extcodecopy(query, other, 0, 0x2d)\\n            result := and(eq(mload(clone), mload(other)), eq(mload(add(clone, 0xd)), mload(add(other, 0xd))))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x251025aae93187da44cefe45de37008de41ccc8bbb4d5f17c3e52dd765df3013\",\"license\":\"MIT\"},\"contracts/interfaces/IBaseNFT1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\\\";\\n\\nimport \\\"./IOwnable.sol\\\";\\n\\ninterface IBaseNFT1155 is IERC1155, IERC1155MetadataURI, IOwnable {\\n    event Burn(uint256 indexed tokenId, uint256 amount, uint256 indexed label, bytes32 data);\\n\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function factory() external view returns (address);\\n\\n    function nonces(address account) external view returns (uint256);\\n\\n    function initialize(address _owner) external;\\n\\n    function setURI(uint256 id, string memory uri) external;\\n\\n    function setBaseURI(string memory baseURI) external;\\n\\n    function mint(\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function mintBatch(\\n        address to,\\n        uint256[] calldata tokenIds,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n\\n    function burn(\\n        uint256 tokenId,\\n        uint256 amount,\\n        uint256 label,\\n        bytes32 data\\n    ) external;\\n\\n    function burnBatch(uint256[] calldata tokenIds, uint256[] calldata amounts) external;\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x64b78191b03ddf921f66596794a6d4d74c36b398b1a81bb1b02a63921f88cbb7\",\"license\":\"MIT\"},\"contracts/interfaces/IBaseNFT721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\n\\nimport \\\"./IOwnable.sol\\\";\\n\\ninterface IBaseNFT721 is IERC721, IERC721Metadata, IOwnable {\\n    event Burn(uint256 indexed tokenId, uint256 indexed label, bytes32 data);\\n\\n    event ParkTokenIds(uint256 toTokenId);\\n\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    function PERMIT_ALL_TYPEHASH() external view returns (bytes32);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function factory() external view returns (address);\\n\\n    function nonces(uint256 tokenId) external view returns (uint256);\\n\\n    function noncesForAll(address account) external view returns (uint256);\\n\\n    function parked(uint256 tokenId) external view returns (bool);\\n\\n    function initialize(\\n        string calldata name,\\n        string calldata symbol,\\n        address _owner\\n    ) external;\\n\\n    function setTokenURI(uint256 id, string memory uri) external;\\n\\n    function setBaseURI(string memory uri) external;\\n\\n    function parkTokenIds(uint256 toTokenId) external;\\n\\n    function mint(\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    function mintBatch(\\n        address to,\\n        uint256[] calldata tokenIds,\\n        bytes calldata data\\n    ) external;\\n\\n    function burn(\\n        uint256 tokenId,\\n        uint256 label,\\n        bytes32 data\\n    ) external;\\n\\n    function burnBatch(uint256[] calldata tokenIds) external;\\n\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function permitAll(\\n        address owner,\\n        address spender,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xd5fa70b472bc0f13674be5a9d0cab2e86fecc22e9580dea943498a81042d5a09\",\"license\":\"MIT\"},\"contracts/interfaces/IERC1271.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0;\\n\\n/// @title Interface for verifying contract-based account signatures\\n/// @notice Interface that verifies provided signature for the data\\n/// @dev Interface defined by EIP-1271\\ninterface IERC1271 {\\n    /// @notice Returns whether the provided signature is valid for the provided data\\n    /// @dev MUST return the bytes4 magic value 0x1626ba7e when function passes.\\n    /// MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5).\\n    /// MUST allow external calls.\\n    /// @param hash Hash of the data to be signed\\n    /// @param signature Signature byte array associated with _data\\n    /// @return magicValue The bytes4 magic value 0x1626ba7e\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x7115b65c073af6cadf4dad8baa66422be19ad0741d41566cc3db888def037f80\",\"license\":\"MIT\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface IOwnable {\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function owner() external view returns (address);\\n\\n    function renounceOwnership() external;\\n\\n    function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x59ab7135720d591a800eade4077b4a6a1f6c807cd982edc40132f9de39755ce2\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ITokenFactory {\\n    event UpgradeNFT721(address newTarget);\\n    event UpgradeNFT1155(address newTarget);\\n    event UpgradeSocialToken(address newTarget);\\n    event UpgradeERC721Exchange(address exchange);\\n    event UpgradeERC1155Exchange(address exchange);\\n    event DeployNFT721(\\n        address indexed proxy,\\n        address indexed owner,\\n        string name,\\n        string symbol,\\n        uint256[] tokenIds,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    );\\n    event DeployNFT721(\\n        address indexed proxy,\\n        address indexed owner,\\n        string name,\\n        string symbol,\\n        uint256 toTokenId,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    );\\n    event DeployNFT1155(\\n        address indexed proxy,\\n        address indexed owner,\\n        uint256[] tokenIds,\\n        uint256[] amounts,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    );\\n    event DeploySocialToken(\\n        address indexed proxy,\\n        address indexed owner,\\n        string name,\\n        string symbol,\\n        address indexed dividendToken\\n    );\\n    event Tag(address indexed nft, uint256 indexed tokenId, string indexed tag, uint256 tagNonce);\\n\\n    function MAX_ROYALTY_FEE() external view returns (uint8);\\n\\n    function MAX_OPERATIONAL_FEE() external view returns (uint8);\\n\\n    function NFT721_TYPEHASH() external view returns (bytes32);\\n\\n    function NFT1155_TYPEHASH() external view returns (bytes32);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function nonces721(address account) external view returns (uint256);\\n\\n    function nonces1155(address account) external view returns (uint256);\\n\\n    function baseURI721() external view returns (string memory);\\n\\n    function baseURI1155() external view returns (string memory);\\n\\n    function erc721Exchange() external view returns (address);\\n\\n    function erc1155Exchange() external view returns (address);\\n\\n    function protocolFeeInfo() external view returns (address recipient, uint8 permil);\\n\\n    function operationalFeeInfo() external view returns (address recipient, uint8 permil);\\n\\n    function isStrategyWhitelisted(address strategy) external view returns (bool);\\n\\n    function isDeployerWhitelisted(address strategy) external view returns (bool);\\n\\n    function setBaseURI721(string memory uri) external;\\n\\n    function setBaseURI1155(string memory uri) external;\\n\\n    function setProtocolFeeRecipient(address protocolFeeRecipient) external;\\n\\n    function setOperationalFeeRecipient(address operationalFeeRecipient) external;\\n\\n    function setOperationalFee(uint8 operationalFee) external;\\n\\n    function setDeployerWhitelisted(address deployer, bool whitelisted) external;\\n\\n    function setStrategyWhitelisted(address strategy, bool whitelisted) external;\\n\\n    function upgradeNFT721(address newTarget) external;\\n\\n    function upgradeNFT1155(address newTarget) external;\\n\\n    function upgradeSocialToken(address newTarget) external;\\n\\n    function upgradeERC721Exchange(address exchange) external;\\n\\n    function upgradeERC1155Exchange(address exchange) external;\\n\\n    function deployNFT721(\\n        address owner,\\n        string calldata name,\\n        string calldata symbol,\\n        uint256[] calldata tokenIds,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    ) external returns (address nft);\\n\\n    function deployNFT721(\\n        address owner,\\n        string calldata name,\\n        string calldata symbol,\\n        uint256 toTokenId,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    ) external returns (address nft);\\n\\n    function isNFT721(address query) external view returns (bool result);\\n\\n    function deployNFT1155(\\n        address owner,\\n        uint256[] memory tokenIds,\\n        uint256[] memory amounts,\\n        address royaltyFeeRecipient,\\n        uint8 royaltyFee\\n    ) external returns (address nft);\\n\\n    function isNFT1155(address query) external view returns (bool result);\\n\\n    function deploySocialToken(\\n        address owner,\\n        string memory name,\\n        string memory symbol,\\n        address dividendToken\\n    ) external returns (address proxy);\\n\\n    function isSocialToken(address query) external view returns (bool result);\\n\\n    function mint721(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function mint1155(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes calldata data,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function mintWithTags721(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data,\\n        string[] calldata tags,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function mintWithTags1155(\\n        address nft,\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes calldata data,\\n        string[] calldata tags,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function setTags721(\\n        address nft,\\n        uint256 tokenId,\\n        string[] calldata tags\\n    ) external;\\n\\n    function setTags1155(\\n        address nft,\\n        uint256 tokenId,\\n        string[] calldata tags\\n    ) external;\\n}\\n\",\"keccak256\":\"0x395ed1037d0f8169a5dc1519935fecedff672eba755a343c2f09123f64b2e7fc\",\"license\":\"MIT\"},\"contracts/libraries/Signature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nimport \\\"../interfaces/IERC1271.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\nlibrary Signature {\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        require(\\n            uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"ECDSA: invalid signature 's' value\\\"\\n        );\\n        require(v == 27 || v == 28, \\\"ECDSA: invalid signature 'v' value\\\");\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    function verify(\\n        bytes32 hash,\\n        address signer,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s,\\n        bytes32 domainSeparator\\n    ) internal view {\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, hash));\\n        if (Address.isContract(signer)) {\\n            require(\\n                IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e,\\n                \\\"SHOYU: UNAUTHORIZED\\\"\\n            );\\n        } else {\\n            require(recover(digest, v, r, s) == signer, \\\"SHOYU: UNAUTHORIZED\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8f7e3e39fbf27fddf7e14150b00a65b31cdcf0307cef01e105f6d4fce50ff3a4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200347438038062003474833981016040819052620000349162000329565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b038881166001600160a81b031992831617600160a01b60ff8a81168202929092179094556005805492891692909316919091179086169092029190911790558151620000d4906008906020850190620001a1565b508051620000ea906009906020840190620001a1565b504660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f3d756f2d713885339bf87a67d06485521802e959f50d61d7607ed7117e51bc16918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201526080810192909252309082015260c00160408051601f198184030181529190528051602090910120608052506200042d945050505050565b828054620001af90620003da565b90600052602060002090601f016020900481019282620001d357600085556200021e565b82601f10620001ee57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021e57825182559160200191906001019062000201565b506200022c92915062000230565b5090565b5b808211156200022c576000815560010162000231565b80516001600160a01b03811681146200025f57600080fd5b919050565b600082601f83011262000275578081fd5b81516001600160401b038082111562000292576200029262000417565b604051601f8301601f19908116603f01168101908282118183101715620002bd57620002bd62000417565b81604052838152602092508683858801011115620002d9578485fd5b8491505b83821015620002fc5785820183015181830184015290820190620002dd565b838211156200030d57848385830101525b9695505050505050565b805160ff811681146200025f57600080fd5b60008060008060008060c0878903121562000342578182fd5b6200034d8762000247565b95506200035d6020880162000317565b94506200036d6040880162000247565b93506200037d6060880162000317565b60808801519093506001600160401b03808211156200039a578384fd5b620003a88a838b0162000264565b935060a0890151915080821115620003be578283fd5b50620003cd89828a0162000264565b9150509295509295509295565b600181811c90821680620003ef57607f821691505b602082108114156200041157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160a051613021620004536000396000610bbc01526000610be401526130216000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80638065002f11610151578063c6edbca4116100c3578063d5f7e75611610087578063d5f7e756146105fa578063db5970171461060d578063e521cb9214610620578063e7ceca8114610633578063f2fde38b14610646578063fca95f2b1461065957610274565b8063c6edbca414610596578063cb03111c1461059e578063d1640c9e146105b1578063d1e09533146105d4578063d4bea1e9146105e757610274565b80639cc7fa9a116101155780639cc7fa9a146104e6578063aec0b54314610506578063b3584b0d14610540578063bc96e8c714610553578063c032815f14610566578063c2b11e181461057957610274565b80638065002f146104655780638518482e146104785780638da5cb5b1461048b578063943fcb2e1461049c578063999ba27c146104c357610274565b80633e8440d5116101ea5780634e3a599b116101ae5780634e3a599b146103fe57806353ebf022146104115780635ef0036914610424578063706e1ce514610437578063715018a61461044a578063749495881461045257610274565b80633e8440d51461038d57806343ae710b146103a05780634446e584146103b357806345943ee1146103d35780634dd5ad0b146103f657610274565b806324b72fd91161023c57806324b72fd9146102fe57806325ea867814610311578063262b9f631461034a57806334375c901461035d5780633644e515146103705780633683a63d1461037857610274565b806304895e021461027957806304d6e7521461028e5780630e309d87146102a157806317e1f82e146102b45780631f52ef60146102d3575b600080fd5b61028c61028736600461235e565b610680565b005b61028c61029c366004612450565b61072b565b61028c6102af36600461269b565b6108a4565b6102bc60fa81565b60405160ff90911681526020015b60405180910390f35b6102e66102e136600461279b565b6108f9565b6040516001600160a01b0390911681526020016102ca565b61028c61030c36600461269b565b610ad1565b61033c61031f3660046128ad565b600e60209081526000928352604080842090915290825290205481565b6040519081526020016102ca565b61028c610358366004612956565b610b75565b600a546102e6906001600160a01b031681565b61033c610bb6565b610380610cad565b6040516102ca9190612de9565b61028c61039b3660046124dd565b610d3b565b600b546102e6906001600160a01b031681565b61033c6103c136600461235e565b60076020526000908152604090205481565b6103e66103e136600461235e565b610d61565b60405190151581526020016102ca565b6102bc603281565b6103e661040c36600461235e565b610ddd565b61028c61041f36600461235e565b610e39565b6103e661043236600461235e565b610ee7565b61028c61044536600461235e565b610f42565b61028c610fea565b61028c6104603660046129a8565b61105e565b61028c61047336600461259a565b6110f1565b61028c610486366004612956565b61126c565b6000546001600160a01b03166102e6565b61033c7fa775fac8298714a0a727dc16ef93dfe9da2c45e1cd7f3e9fec481134044c4c7a81565b6103e66104d136600461235e565b600d6020526000908152604090205460ff1681565b61033c6104f436600461235e565b60066020526000908152604090205481565b6004546001600160a01b03811690600160a01b900460ff165b604080516001600160a01b03909316835260ff9091166020830152016102ca565b61028c61054e3660046128d8565b6112a9565b6102e6610561366004612828565b611359565b6102e66105743660046126d7565b6114a1565b6005546001600160a01b03811690600160a01b900460ff1661051f565b610380611665565b61028c6105ac36600461235e565b611672565b6103e66105bf36600461235e565b600c6020526000908152604090205460ff1681565b61028c6105e236600461239d565b6116ea565b61028c6105f53660046128d8565b61170e565b61028c61060836600461235e565b6117aa565b6102e661061b366004612605565b611852565b61028c61062e36600461235e565b611994565b61028c61064136600461235e565b611a36565b61028c61065436600461235e565b611aae565b61033c7fc168906d06f61a0b44a8e4e89e114a285237f3c7eb34b490a56feeefe2ce3eef81565b6000546001600160a01b031633146106b35760405162461bcd60e51b81526004016106aa90612e4b565b60405180910390fd5b6001600160a01b0381166107095760405162461bcd60e51b815260206004820152601860248201527f53484f59553a20494e56414c49445f524543495049454e54000000000000000060448201526064016106aa565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000876001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561076657600080fd5b505afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190612381565b6001600160a01b0381166000908152600660205260408120805492935090917fc168906d06f61a0b44a8e4e89e114a285237f3c7eb34b490a56feeefe2ce3eef918b918b918b918b91876107f183612f6c565b9190505560405160200161080a96959493929190612c7a565b6040516020818303038152906040528051906020012090506108378183878787610832610bb6565b611b98565b6040516394d008ef60e01b81526001600160a01b038a16906394d008ef90610867908b908b908b90600401612bd2565b600060405180830381600087803b15801561088157600080fd5b505af1158015610895573d6000803e3d6000fd5b50505050505050505050505050565b6000546001600160a01b031633146108ce5760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b03919091166000908152600c60205260409020805460ff1916911515919091179055565b6000808052600c602052600080516020612fcc8339815191525460ff16806109305750336000908152600c602052604090205460ff165b61094c5760405162461bcd60e51b81526004016106aa90612e21565b8661098f5760405162461bcd60e51b815260206004820152601360248201527253484f59553a20494e56414c49445f4e414d4560681b60448201526064016106aa565b846109d45760405162461bcd60e51b815260206004820152601560248201527414d213d6554e881253959053125117d4d6535093d3605a1b60448201526064016106aa565b60018054610a6c91906109e8908290612ed3565b81548110610a0657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160a01b0390911690610a3d908c908c908c908c908c908c908c908c90602401612b2b565b60408051601f198184030181529190526020810180516001600160e01b031663ac9a252160e01b179052611d57565b9050886001600160a01b0316816001600160a01b03167fc5a8d7a1d56dd3c513572f5994d9fac3d3a6e1434214939a043b794323f5765f8a8a8a8a8a8a8a604051610abd9796959493929190612d96565b60405180910390a398975050505050505050565b6000546001600160a01b03163314610afb5760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b038216610b4a5760405162461bcd60e51b815260206004820152601660248201527553484f59553a20494e56414c49445f4144445245535360501b60448201526064016106aa565b6001600160a01b03919091166000908152600d60205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314610b9f5760405162461bcd60e51b81526004016106aa90612e4b565b8051610bb2906008906020840190612140565b5050565b600080467f00000000000000000000000000000000000000000000000000000000000000001415610c0857507f0000000000000000000000000000000000000000000000000000000000000000610ca8565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f3d756f2d713885339bf87a67d06485521802e959f50d61d7607ed7117e51bc16918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c0016040516020818303038152906040528051906020012090505b905090565b60088054610cba90612f31565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce690612f31565b8015610d335780601f10610d0857610100808354040283529160200191610d33565b820191906000526020600020905b815481529060010190602001808311610d1657829003601f168201915b505050505081565b610d4b89898989898888886110f1565b610d56898886611e5a565b505050505050505050565b6002546000908190610d7590600190612ed3565b90505b610db760028281548110610d9c57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031684611f36565b15610dc6576001915050610dd8565b80610dd081612f1a565b915050610d78565b919050565b6003546000908190610df190600190612ed3565b90505b610e1860038281548110610d9c57634e487b7160e01b600052603260045260246000fd5b15610e27576001915050610dd8565b80610e3181612f1a565b915050610df4565b6000546001600160a01b03163314610e635760405162461bcd60e51b81526004016106aa90612e4b565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0383169081179091556040519081527f90dccdf0d0809c3f945a409a3ce4652bf2c9b283e5aad88b3e36361433132cbb906020015b60405180910390a150565b600180546000918291610efa9190612ed3565b90505b610f2160018281548110610d9c57634e487b7160e01b600052603260045260246000fd5b15610f30576001915050610dd8565b80610f3a81612f1a565b915050610efd565b6000546001600160a01b03163314610f6c5760405162461bcd60e51b81526004016106aa90612e4b565b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0383169081179091556040519081527fe8698a9880993ca12864a4d6e8bff70e3e073d4104aa0f9a8fdb2b74576922ab90602001610edc565b6000546001600160a01b031633146110145760405162461bcd60e51b81526004016106aa90612e4b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146110885760405162461bcd60e51b81526004016106aa90612e4b565b603260ff821611156110d15760405162461bcd60e51b815260206004820152601260248201527153484f59553a20494e56414c49445f46454560701b60448201526064016106aa565b6005805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000886001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561112c57600080fd5b505afa158015611140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111649190612381565b6001600160a01b0381166000908152600760205260408120805492935090917fa775fac8298714a0a727dc16ef93dfe9da2c45e1cd7f3e9fec481134044c4c7a918c918c918c918c918c9190886111ba83612f6c565b919050556040516020016111d49796959493929190612cc6565b6040516020818303038152906040528051906020012090506111fc8183878787610832610bb6565b60405163731133e960e01b81526001600160a01b038b169063731133e99061122e908c908c908c908c90600401612bf9565b600060405180830381600087803b15801561124857600080fd5b505af115801561125c573d6000803e3d6000fd5b5050505050505050505050505050565b6000546001600160a01b031633146112965760405162461bcd60e51b81526004016106aa90612e4b565b8051610bb2906009906020840190612140565b6040516331a9108f60e11b81526004810183905233906001600160a01b03851690636352211e9060240160206040518083038186803b1580156112eb57600080fd5b505afa1580156112ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113239190612381565b6001600160a01b0316146113495760405162461bcd60e51b81526004016106aa90612e21565b611354838383611e5a565b505050565b6000808052600c602052600080516020612fcc8339815191525460ff16806113905750336000908152600c602052604090205460ff165b6113ac5760405162461bcd60e51b81526004016106aa90612e21565b6000858585856040516024016113c59493929190612b89565b60408051601f198184030181529190526020810180516001600160e01b031663613d25bb60e01b1790526003805491925061143f9161140690600190612ed3565b8154811061142457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031682611d57565b9150826001600160a01b0316866001600160a01b0316836001600160a01b03167fb17d2759d3d0f9f291f22b908114ad38cb6e664c1355972dc09eeed60c2302008888604051611490929190612dfc565b60405180910390a450949350505050565b6000808052600c602052600080516020612fcc8339815191525460ff16806114d85750336000908152600c602052604090205460ff165b6114f45760405162461bcd60e51b81526004016106aa90612e21565b866115375760405162461bcd60e51b815260206004820152601360248201527253484f59553a20494e56414c49445f4e414d4560681b60448201526064016106aa565b8461157c5760405162461bcd60e51b815260206004820152601560248201527414d213d6554e881253959053125117d4d6535093d3605a1b60448201526064016106aa565b600180546116149190611590908290612ed3565b815481106115ae57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160a01b03909116906115e5908c908c908c908c908c908c908c908c90602401612ac0565b60408051601f198184030181529190526020810180516001600160e01b0316634f65e6d160e11b179052611d57565b9050886001600160a01b0316816001600160a01b03167f4b593938d27e3a08db017a6f1815ab371dc97836b53114a3d5d52fecc663c5b48a8a8a8a8a8a8a604051610abd9796959493929190612d33565b60098054610cba90612f31565b6000546001600160a01b0316331461169c5760405162461bcd60e51b81526004016106aa90612e4b565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527f7906d96d0db1eb8f6805ac6930c6abd633b14b59c0b239412e1fd979ca12546690602001610edc565b6116f98888888887878761072b565b611704888786611e5a565b5050505050505050565b604051627eeac760e11b8152336004820152602481018390526000906001600160a01b0385169062fdd58e9060440160206040518083038186803b15801561175557600080fd5b505afa158015611769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178d9190612990565b116113495760405162461bcd60e51b81526004016106aa90612e21565b6000546001600160a01b031633146117d45760405162461bcd60e51b81526004016106aa90612e4b565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383169081179091556040519081527f1c9e0a997b60cd0855450b5761db24330074e914ceab5b053193b28d6a3e456390602001610edc565b6000808052600c602052600080516020612fcc8339815191525460ff16806118895750336000908152600c602052604090205460ff165b6118a55760405162461bcd60e51b81526004016106aa90612e21565b6002805461193891906118ba90600190612ed3565b815481106118d857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160a01b03909116906119099089908990899089908990602401612a6e565b60408051601f198184030181529190526020810180516001600160e01b031663bff5e79d60e01b179052611d57565b9050856001600160a01b0316816001600160a01b03167f5c113900031172d40b0061b68858275d56528342e41925faad4c305a04438bf5878787876040516119839493929190612c30565b60405180910390a395945050505050565b6000546001600160a01b031633146119be5760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b038116611a145760405162461bcd60e51b815260206004820152601c60248201527f53484f59553a20494e56414c49445f4645455f524543495049454e540000000060448201526064016106aa565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611a605760405162461bcd60e51b81526004016106aa90612e4b565b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527fca237d3f5dd115a560a2d7ddcc75a87200fca9a3b55e7f78330108c92b87a99a90602001610edc565b6000546001600160a01b03163314611ad85760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b038116611b3d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106aa565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60405161190160f01b60208201526022810182905260428101879052600090606201604051602081830303815290604052805190602001209050611bdc863b151590565b15611cec57604080516020810186905280820185905260f887901b6001600160f81b0319166060820152815160418183030181526061820192839052630b135d3f60e11b9092526001600160a01b03881691631626ba7e91611c42918591606501612d1a565b60206040518083038186803b158015611c5a57600080fd5b505afa158015611c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c92919061292e565b6001600160e01b031916631626ba7e60e01b14611ce75760405162461bcd60e51b815260206004820152601360248201527214d213d6554e8815539055551213d492569151606a1b60448201526064016106aa565b611d4e565b856001600160a01b0316611d0282878787611f97565b6001600160a01b031614611d4e5760405162461bcd60e51b815260206004820152601360248201527214d213d6554e8815539055551213d492569151606a1b60448201526064016106aa565b50505050505050565b6000808360601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0925050600083511115611e53576000826001600160a01b031684604051611dc89190612a52565b6000604051808303816000865af19150503d8060008114611e05576040519150601f19603f3d011682016040523d82523d6000602084013e611e0a565b606091505b5050905080611e515760405162461bcd60e51b815260206004820152601360248201527253484f59553a2043414c4c5f4641494c55524560681b60448201526064016106aa565b505b5092915050565b6001600160a01b0383166000908152600e60209081526040808320858452909152812080549082611e8a83612f6c565b91905055905060005b8251811015611f2f57828181518110611ebc57634e487b7160e01b600052603260045260246000fd5b6020026020010151604051611ed19190612a52565b604051809103902084866001600160a01b03167f8ef9f212aabac8e20a00892dc88a0afc9c9eb3522420eb21848d943a2dd3771785604051611f1591815260200190565b60405180910390a480611f2781612f6c565b915050611e93565b5050505050565b6000808360601b905060405169363d3d373d3d3d363d7360b01b815281600a8201526e5af43d82803e903d91602b57fd5bf360881b601e82015260408101602d600082873c600d810151600d83015114815183511416935050505092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156120145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106aa565b8360ff16601b148061202957508360ff16601c145b6120805760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106aa565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156120d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166121375760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106aa565b95945050505050565b82805461214c90612f31565b90600052602060002090601f01602090048101928261216e57600085556121b4565b82601f1061218757805160ff19168380011785556121b4565b828001600101855582156121b4579182015b828111156121b4578251825591602001919060010190612199565b506121c09291506121c4565b5090565b5b808211156121c057600081556001016121c5565b600082601f8301126121e9578081fd5b813560206121fe6121f983612eb0565b612e80565b82815281810190858301855b8581101561223357612221898684358b010161229d565b8452928401929084019060010161220a565b5090979650505050505050565b600082601f830112612250578081fd5b813560206122606121f983612eb0565b80838252828201915082860187848660051b890101111561227f578586fd5b855b8581101561223357813584529284019290840190600101612281565b600082601f8301126122ad578081fd5b81356001600160401b038111156122c6576122c6612f9d565b6122d9601f8201601f1916602001612e80565b8181528460208386010111156122ed578283fd5b816020850160208301379081016020019190915292915050565b60008083601f840112612318578182fd5b5081356001600160401b0381111561232e578182fd5b60208301915083602082850101111561234657600080fd5b9250929050565b803560ff81168114610dd857600080fd5b60006020828403121561236f578081fd5b813561237a81612fb3565b9392505050565b600060208284031215612392578081fd5b815161237a81612fb3565b600080600080600080600080610100898b0312156123b9578384fd5b88356123c481612fb3565b975060208901356123d481612fb3565b96506040890135955060608901356001600160401b03808211156123f6578586fd5b6124028c838d0161229d565b965060808b0135915080821115612417578586fd5b506124248b828c016121d9565b94505061243360a08a0161234d565b925060c0890135915060e089013590509295985092959890939650565b600080600080600080600060e0888a03121561246a578283fd5b873561247581612fb3565b9650602088013561248581612fb3565b95506040880135945060608801356001600160401b038111156124a6578384fd5b6124b28a828b0161229d565b9450506124c16080890161234d565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060008060006101208a8c0312156124fb578283fd5b893561250681612fb3565b985060208a013561251681612fb3565b975060408a0135965060608a0135955060808a01356001600160401b038082111561253f578485fd5b61254b8d838e0161229d565b965060a08c0135915080821115612560578485fd5b5061256d8c828d016121d9565b94505061257c60c08b0161234d565b925060e08a013591506101008a013590509295985092959850929598565b600080600080600080600080610100898b0312156125b6578182fd5b88356125c181612fb3565b975060208901356125d181612fb3565b9650604089013595506060890135945060808901356001600160401b038111156125f9578283fd5b6124248b828c0161229d565b600080600080600060a0868803121561261c578283fd5b853561262781612fb3565b945060208601356001600160401b0380821115612642578485fd5b61264e89838a01612240565b95506040880135915080821115612663578485fd5b5061267088828901612240565b935050606086013561268181612fb3565b915061268f6080870161234d565b90509295509295909350565b600080604083850312156126ad578182fd5b82356126b881612fb3565b9150602083013580151581146126cc578182fd5b809150509250929050565b60008060008060008060008060c0898b0312156126f2578182fd5b88356126fd81612fb3565b975060208901356001600160401b0380821115612718578384fd5b6127248c838d01612307565b909950975060408b013591508082111561273c578384fd5b6127488c838d01612307565b909750955060608b0135915080821115612760578384fd5b5061276d8b828c01612240565b935050608089013561277e81612fb3565b915061278c60a08a0161234d565b90509295985092959890939650565b60008060008060008060008060c0898b0312156127b6578182fd5b88356127c181612fb3565b975060208901356001600160401b03808211156127dc578384fd5b6127e88c838d01612307565b909950975060408b0135915080821115612800578384fd5b5061280d8b828c01612307565b90965094505060608901359250608089013561277e81612fb3565b6000806000806080858703121561283d578182fd5b843561284881612fb3565b935060208501356001600160401b0380821115612863578384fd5b61286f8883890161229d565b94506040870135915080821115612884578384fd5b506128918782880161229d565b92505060608501356128a281612fb3565b939692955090935050565b600080604083850312156128bf578182fd5b82356128ca81612fb3565b946020939093013593505050565b6000806000606084860312156128ec578081fd5b83356128f781612fb3565b92506020840135915060408401356001600160401b03811115612918578182fd5b612924868287016121d9565b9150509250925092565b60006020828403121561293f578081fd5b81516001600160e01b03198116811461237a578182fd5b600060208284031215612967578081fd5b81356001600160401b0381111561297c578182fd5b6129888482850161229d565b949350505050565b6000602082840312156129a1578081fd5b5051919050565b6000602082840312156129b9578081fd5b61237a8261234d565b6000815180845260208085019450808401835b838110156129f1578151875295820195908201906001016129d5565b509495945050505050565b60008151808452612a14816020860160208601612eea565b601f01601f19169290920160200192915050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008251612a64818460208701612eea565b9190910192915050565b600060018060a01b03808816835260a06020840152612a9060a08401886129c2565b8381036040850152612aa281886129c2565b959091166060840152505060ff919091166080909101529392505050565b600060018060a01b03808b16835260c06020840152612ae360c084018a8c612a28565b8381036040850152612af681898b612a28565b90508381036060850152612b0a81886129c2565b959091166080840152505060ff9190911660a0909101529695505050505050565b600060018060a01b03808b16835260c06020840152612b4e60c084018a8c612a28565b8381036040850152612b6181898b612a28565b92505085606084015280851660808401525060ff831660a08301529998505050505050505050565b600060018060a01b03808716835260806020840152612bab60808401876129fc565b8381036040850152612bbd81876129fc565b92505080841660608401525095945050505050565b600060018060a01b03851682528360208301526060604083015261213760608301846129fc565b600060018060a01b038616825284602083015283604083015260806060830152612c2660808301846129fc565b9695505050505050565b600060808252612c4360808301876129c2565b8281036020840152612c5581876129c2565b6001600160a01b03959095166040840152505060ff9190911660609091015292915050565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090612cb3908301856129fc565b90508260a0830152979650505050505050565b8781526001600160a01b03878116602083015286166040820152606081018590526080810184905260e060a08201819052600090612d06908301856129fc565b90508260c083015298975050505050505050565b60008382526040602083015261298860408301846129fc565b600060a08252612d4760a08301898b612a28565b8281036020840152612d5a81888a612a28565b90508281036040840152612d6e81876129c2565b6001600160a01b03959095166060840152505060ff9190911660809091015295945050505050565b600060a08252612daa60a08301898b612a28565b8281036020840152612dbd81888a612a28565b604084019690965250506001600160a01b0392909216606083015260ff16608090910152949350505050565b60006020825261237a60208301846129fc565b600060408252612e0f60408301856129fc565b828103602084015261213781856129fc565b60208082526010908201526f29a427acaa9d102327a92124a22222a760811b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715612ea857612ea8612f9d565b604052919050565b60006001600160401b03821115612ec957612ec9612f9d565b5060051b60200190565b600082821015612ee557612ee5612f87565b500390565b60005b83811015612f05578181015183820152602001612eed565b83811115612f14576000848401525b50505050565b600081612f2957612f29612f87565b506000190190565b600181811c90821680612f4557607f821691505b60208210811415612f6657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612f8057612f80612f87565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612fc857600080fd5b5056fe13649b2456f1b42fef0f0040b3aaeabcd21a76a0f3f5defd4f583839455116e8a2646970667358221220a79f298b2c0e5975fbff5ffc8faa253cbe9849e8d7d561c33c65215f70fe46b364736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102745760003560e01c80638065002f11610151578063c6edbca4116100c3578063d5f7e75611610087578063d5f7e756146105fa578063db5970171461060d578063e521cb9214610620578063e7ceca8114610633578063f2fde38b14610646578063fca95f2b1461065957610274565b8063c6edbca414610596578063cb03111c1461059e578063d1640c9e146105b1578063d1e09533146105d4578063d4bea1e9146105e757610274565b80639cc7fa9a116101155780639cc7fa9a146104e6578063aec0b54314610506578063b3584b0d14610540578063bc96e8c714610553578063c032815f14610566578063c2b11e181461057957610274565b80638065002f146104655780638518482e146104785780638da5cb5b1461048b578063943fcb2e1461049c578063999ba27c146104c357610274565b80633e8440d5116101ea5780634e3a599b116101ae5780634e3a599b146103fe57806353ebf022146104115780635ef0036914610424578063706e1ce514610437578063715018a61461044a578063749495881461045257610274565b80633e8440d51461038d57806343ae710b146103a05780634446e584146103b357806345943ee1146103d35780634dd5ad0b146103f657610274565b806324b72fd91161023c57806324b72fd9146102fe57806325ea867814610311578063262b9f631461034a57806334375c901461035d5780633644e515146103705780633683a63d1461037857610274565b806304895e021461027957806304d6e7521461028e5780630e309d87146102a157806317e1f82e146102b45780631f52ef60146102d3575b600080fd5b61028c61028736600461235e565b610680565b005b61028c61029c366004612450565b61072b565b61028c6102af36600461269b565b6108a4565b6102bc60fa81565b60405160ff90911681526020015b60405180910390f35b6102e66102e136600461279b565b6108f9565b6040516001600160a01b0390911681526020016102ca565b61028c61030c36600461269b565b610ad1565b61033c61031f3660046128ad565b600e60209081526000928352604080842090915290825290205481565b6040519081526020016102ca565b61028c610358366004612956565b610b75565b600a546102e6906001600160a01b031681565b61033c610bb6565b610380610cad565b6040516102ca9190612de9565b61028c61039b3660046124dd565b610d3b565b600b546102e6906001600160a01b031681565b61033c6103c136600461235e565b60076020526000908152604090205481565b6103e66103e136600461235e565b610d61565b60405190151581526020016102ca565b6102bc603281565b6103e661040c36600461235e565b610ddd565b61028c61041f36600461235e565b610e39565b6103e661043236600461235e565b610ee7565b61028c61044536600461235e565b610f42565b61028c610fea565b61028c6104603660046129a8565b61105e565b61028c61047336600461259a565b6110f1565b61028c610486366004612956565b61126c565b6000546001600160a01b03166102e6565b61033c7fa775fac8298714a0a727dc16ef93dfe9da2c45e1cd7f3e9fec481134044c4c7a81565b6103e66104d136600461235e565b600d6020526000908152604090205460ff1681565b61033c6104f436600461235e565b60066020526000908152604090205481565b6004546001600160a01b03811690600160a01b900460ff165b604080516001600160a01b03909316835260ff9091166020830152016102ca565b61028c61054e3660046128d8565b6112a9565b6102e6610561366004612828565b611359565b6102e66105743660046126d7565b6114a1565b6005546001600160a01b03811690600160a01b900460ff1661051f565b610380611665565b61028c6105ac36600461235e565b611672565b6103e66105bf36600461235e565b600c6020526000908152604090205460ff1681565b61028c6105e236600461239d565b6116ea565b61028c6105f53660046128d8565b61170e565b61028c61060836600461235e565b6117aa565b6102e661061b366004612605565b611852565b61028c61062e36600461235e565b611994565b61028c61064136600461235e565b611a36565b61028c61065436600461235e565b611aae565b61033c7fc168906d06f61a0b44a8e4e89e114a285237f3c7eb34b490a56feeefe2ce3eef81565b6000546001600160a01b031633146106b35760405162461bcd60e51b81526004016106aa90612e4b565b60405180910390fd5b6001600160a01b0381166107095760405162461bcd60e51b815260206004820152601860248201527f53484f59553a20494e56414c49445f524543495049454e54000000000000000060448201526064016106aa565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000876001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561076657600080fd5b505afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190612381565b6001600160a01b0381166000908152600660205260408120805492935090917fc168906d06f61a0b44a8e4e89e114a285237f3c7eb34b490a56feeefe2ce3eef918b918b918b918b91876107f183612f6c565b9190505560405160200161080a96959493929190612c7a565b6040516020818303038152906040528051906020012090506108378183878787610832610bb6565b611b98565b6040516394d008ef60e01b81526001600160a01b038a16906394d008ef90610867908b908b908b90600401612bd2565b600060405180830381600087803b15801561088157600080fd5b505af1158015610895573d6000803e3d6000fd5b50505050505050505050505050565b6000546001600160a01b031633146108ce5760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b03919091166000908152600c60205260409020805460ff1916911515919091179055565b6000808052600c602052600080516020612fcc8339815191525460ff16806109305750336000908152600c602052604090205460ff165b61094c5760405162461bcd60e51b81526004016106aa90612e21565b8661098f5760405162461bcd60e51b815260206004820152601360248201527253484f59553a20494e56414c49445f4e414d4560681b60448201526064016106aa565b846109d45760405162461bcd60e51b815260206004820152601560248201527414d213d6554e881253959053125117d4d6535093d3605a1b60448201526064016106aa565b60018054610a6c91906109e8908290612ed3565b81548110610a0657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160a01b0390911690610a3d908c908c908c908c908c908c908c908c90602401612b2b565b60408051601f198184030181529190526020810180516001600160e01b031663ac9a252160e01b179052611d57565b9050886001600160a01b0316816001600160a01b03167fc5a8d7a1d56dd3c513572f5994d9fac3d3a6e1434214939a043b794323f5765f8a8a8a8a8a8a8a604051610abd9796959493929190612d96565b60405180910390a398975050505050505050565b6000546001600160a01b03163314610afb5760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b038216610b4a5760405162461bcd60e51b815260206004820152601660248201527553484f59553a20494e56414c49445f4144445245535360501b60448201526064016106aa565b6001600160a01b03919091166000908152600d60205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314610b9f5760405162461bcd60e51b81526004016106aa90612e4b565b8051610bb2906008906020840190612140565b5050565b600080467f00000000000000000000000000000000000000000000000000000000000000001415610c0857507f0000000000000000000000000000000000000000000000000000000000000000610ca8565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f3d756f2d713885339bf87a67d06485521802e959f50d61d7607ed7117e51bc16918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c0016040516020818303038152906040528051906020012090505b905090565b60088054610cba90612f31565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce690612f31565b8015610d335780601f10610d0857610100808354040283529160200191610d33565b820191906000526020600020905b815481529060010190602001808311610d1657829003601f168201915b505050505081565b610d4b89898989898888886110f1565b610d56898886611e5a565b505050505050505050565b6002546000908190610d7590600190612ed3565b90505b610db760028281548110610d9c57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031684611f36565b15610dc6576001915050610dd8565b80610dd081612f1a565b915050610d78565b919050565b6003546000908190610df190600190612ed3565b90505b610e1860038281548110610d9c57634e487b7160e01b600052603260045260246000fd5b15610e27576001915050610dd8565b80610e3181612f1a565b915050610df4565b6000546001600160a01b03163314610e635760405162461bcd60e51b81526004016106aa90612e4b565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0383169081179091556040519081527f90dccdf0d0809c3f945a409a3ce4652bf2c9b283e5aad88b3e36361433132cbb906020015b60405180910390a150565b600180546000918291610efa9190612ed3565b90505b610f2160018281548110610d9c57634e487b7160e01b600052603260045260246000fd5b15610f30576001915050610dd8565b80610f3a81612f1a565b915050610efd565b6000546001600160a01b03163314610f6c5760405162461bcd60e51b81526004016106aa90612e4b565b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0383169081179091556040519081527fe8698a9880993ca12864a4d6e8bff70e3e073d4104aa0f9a8fdb2b74576922ab90602001610edc565b6000546001600160a01b031633146110145760405162461bcd60e51b81526004016106aa90612e4b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146110885760405162461bcd60e51b81526004016106aa90612e4b565b603260ff821611156110d15760405162461bcd60e51b815260206004820152601260248201527153484f59553a20494e56414c49445f46454560701b60448201526064016106aa565b6005805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000886001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561112c57600080fd5b505afa158015611140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111649190612381565b6001600160a01b0381166000908152600760205260408120805492935090917fa775fac8298714a0a727dc16ef93dfe9da2c45e1cd7f3e9fec481134044c4c7a918c918c918c918c918c9190886111ba83612f6c565b919050556040516020016111d49796959493929190612cc6565b6040516020818303038152906040528051906020012090506111fc8183878787610832610bb6565b60405163731133e960e01b81526001600160a01b038b169063731133e99061122e908c908c908c908c90600401612bf9565b600060405180830381600087803b15801561124857600080fd5b505af115801561125c573d6000803e3d6000fd5b5050505050505050505050505050565b6000546001600160a01b031633146112965760405162461bcd60e51b81526004016106aa90612e4b565b8051610bb2906009906020840190612140565b6040516331a9108f60e11b81526004810183905233906001600160a01b03851690636352211e9060240160206040518083038186803b1580156112eb57600080fd5b505afa1580156112ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113239190612381565b6001600160a01b0316146113495760405162461bcd60e51b81526004016106aa90612e21565b611354838383611e5a565b505050565b6000808052600c602052600080516020612fcc8339815191525460ff16806113905750336000908152600c602052604090205460ff165b6113ac5760405162461bcd60e51b81526004016106aa90612e21565b6000858585856040516024016113c59493929190612b89565b60408051601f198184030181529190526020810180516001600160e01b031663613d25bb60e01b1790526003805491925061143f9161140690600190612ed3565b8154811061142457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031682611d57565b9150826001600160a01b0316866001600160a01b0316836001600160a01b03167fb17d2759d3d0f9f291f22b908114ad38cb6e664c1355972dc09eeed60c2302008888604051611490929190612dfc565b60405180910390a450949350505050565b6000808052600c602052600080516020612fcc8339815191525460ff16806114d85750336000908152600c602052604090205460ff165b6114f45760405162461bcd60e51b81526004016106aa90612e21565b866115375760405162461bcd60e51b815260206004820152601360248201527253484f59553a20494e56414c49445f4e414d4560681b60448201526064016106aa565b8461157c5760405162461bcd60e51b815260206004820152601560248201527414d213d6554e881253959053125117d4d6535093d3605a1b60448201526064016106aa565b600180546116149190611590908290612ed3565b815481106115ae57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160a01b03909116906115e5908c908c908c908c908c908c908c908c90602401612ac0565b60408051601f198184030181529190526020810180516001600160e01b0316634f65e6d160e11b179052611d57565b9050886001600160a01b0316816001600160a01b03167f4b593938d27e3a08db017a6f1815ab371dc97836b53114a3d5d52fecc663c5b48a8a8a8a8a8a8a604051610abd9796959493929190612d33565b60098054610cba90612f31565b6000546001600160a01b0316331461169c5760405162461bcd60e51b81526004016106aa90612e4b565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527f7906d96d0db1eb8f6805ac6930c6abd633b14b59c0b239412e1fd979ca12546690602001610edc565b6116f98888888887878761072b565b611704888786611e5a565b5050505050505050565b604051627eeac760e11b8152336004820152602481018390526000906001600160a01b0385169062fdd58e9060440160206040518083038186803b15801561175557600080fd5b505afa158015611769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178d9190612990565b116113495760405162461bcd60e51b81526004016106aa90612e21565b6000546001600160a01b031633146117d45760405162461bcd60e51b81526004016106aa90612e4b565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383169081179091556040519081527f1c9e0a997b60cd0855450b5761db24330074e914ceab5b053193b28d6a3e456390602001610edc565b6000808052600c602052600080516020612fcc8339815191525460ff16806118895750336000908152600c602052604090205460ff165b6118a55760405162461bcd60e51b81526004016106aa90612e21565b6002805461193891906118ba90600190612ed3565b815481106118d857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160a01b03909116906119099089908990899089908990602401612a6e565b60408051601f198184030181529190526020810180516001600160e01b031663bff5e79d60e01b179052611d57565b9050856001600160a01b0316816001600160a01b03167f5c113900031172d40b0061b68858275d56528342e41925faad4c305a04438bf5878787876040516119839493929190612c30565b60405180910390a395945050505050565b6000546001600160a01b031633146119be5760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b038116611a145760405162461bcd60e51b815260206004820152601c60248201527f53484f59553a20494e56414c49445f4645455f524543495049454e540000000060448201526064016106aa565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611a605760405162461bcd60e51b81526004016106aa90612e4b565b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527fca237d3f5dd115a560a2d7ddcc75a87200fca9a3b55e7f78330108c92b87a99a90602001610edc565b6000546001600160a01b03163314611ad85760405162461bcd60e51b81526004016106aa90612e4b565b6001600160a01b038116611b3d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106aa565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60405161190160f01b60208201526022810182905260428101879052600090606201604051602081830303815290604052805190602001209050611bdc863b151590565b15611cec57604080516020810186905280820185905260f887901b6001600160f81b0319166060820152815160418183030181526061820192839052630b135d3f60e11b9092526001600160a01b03881691631626ba7e91611c42918591606501612d1a565b60206040518083038186803b158015611c5a57600080fd5b505afa158015611c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c92919061292e565b6001600160e01b031916631626ba7e60e01b14611ce75760405162461bcd60e51b815260206004820152601360248201527214d213d6554e8815539055551213d492569151606a1b60448201526064016106aa565b611d4e565b856001600160a01b0316611d0282878787611f97565b6001600160a01b031614611d4e5760405162461bcd60e51b815260206004820152601360248201527214d213d6554e8815539055551213d492569151606a1b60448201526064016106aa565b50505050505050565b6000808360601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0925050600083511115611e53576000826001600160a01b031684604051611dc89190612a52565b6000604051808303816000865af19150503d8060008114611e05576040519150601f19603f3d011682016040523d82523d6000602084013e611e0a565b606091505b5050905080611e515760405162461bcd60e51b815260206004820152601360248201527253484f59553a2043414c4c5f4641494c55524560681b60448201526064016106aa565b505b5092915050565b6001600160a01b0383166000908152600e60209081526040808320858452909152812080549082611e8a83612f6c565b91905055905060005b8251811015611f2f57828181518110611ebc57634e487b7160e01b600052603260045260246000fd5b6020026020010151604051611ed19190612a52565b604051809103902084866001600160a01b03167f8ef9f212aabac8e20a00892dc88a0afc9c9eb3522420eb21848d943a2dd3771785604051611f1591815260200190565b60405180910390a480611f2781612f6c565b915050611e93565b5050505050565b6000808360601b905060405169363d3d373d3d3d363d7360b01b815281600a8201526e5af43d82803e903d91602b57fd5bf360881b601e82015260408101602d600082873c600d810151600d83015114815183511416935050505092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156120145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106aa565b8360ff16601b148061202957508360ff16601c145b6120805760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106aa565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156120d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166121375760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106aa565b95945050505050565b82805461214c90612f31565b90600052602060002090601f01602090048101928261216e57600085556121b4565b82601f1061218757805160ff19168380011785556121b4565b828001600101855582156121b4579182015b828111156121b4578251825591602001919060010190612199565b506121c09291506121c4565b5090565b5b808211156121c057600081556001016121c5565b600082601f8301126121e9578081fd5b813560206121fe6121f983612eb0565b612e80565b82815281810190858301855b8581101561223357612221898684358b010161229d565b8452928401929084019060010161220a565b5090979650505050505050565b600082601f830112612250578081fd5b813560206122606121f983612eb0565b80838252828201915082860187848660051b890101111561227f578586fd5b855b8581101561223357813584529284019290840190600101612281565b600082601f8301126122ad578081fd5b81356001600160401b038111156122c6576122c6612f9d565b6122d9601f8201601f1916602001612e80565b8181528460208386010111156122ed578283fd5b816020850160208301379081016020019190915292915050565b60008083601f840112612318578182fd5b5081356001600160401b0381111561232e578182fd5b60208301915083602082850101111561234657600080fd5b9250929050565b803560ff81168114610dd857600080fd5b60006020828403121561236f578081fd5b813561237a81612fb3565b9392505050565b600060208284031215612392578081fd5b815161237a81612fb3565b600080600080600080600080610100898b0312156123b9578384fd5b88356123c481612fb3565b975060208901356123d481612fb3565b96506040890135955060608901356001600160401b03808211156123f6578586fd5b6124028c838d0161229d565b965060808b0135915080821115612417578586fd5b506124248b828c016121d9565b94505061243360a08a0161234d565b925060c0890135915060e089013590509295985092959890939650565b600080600080600080600060e0888a03121561246a578283fd5b873561247581612fb3565b9650602088013561248581612fb3565b95506040880135945060608801356001600160401b038111156124a6578384fd5b6124b28a828b0161229d565b9450506124c16080890161234d565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060008060006101208a8c0312156124fb578283fd5b893561250681612fb3565b985060208a013561251681612fb3565b975060408a0135965060608a0135955060808a01356001600160401b038082111561253f578485fd5b61254b8d838e0161229d565b965060a08c0135915080821115612560578485fd5b5061256d8c828d016121d9565b94505061257c60c08b0161234d565b925060e08a013591506101008a013590509295985092959850929598565b600080600080600080600080610100898b0312156125b6578182fd5b88356125c181612fb3565b975060208901356125d181612fb3565b9650604089013595506060890135945060808901356001600160401b038111156125f9578283fd5b6124248b828c0161229d565b600080600080600060a0868803121561261c578283fd5b853561262781612fb3565b945060208601356001600160401b0380821115612642578485fd5b61264e89838a01612240565b95506040880135915080821115612663578485fd5b5061267088828901612240565b935050606086013561268181612fb3565b915061268f6080870161234d565b90509295509295909350565b600080604083850312156126ad578182fd5b82356126b881612fb3565b9150602083013580151581146126cc578182fd5b809150509250929050565b60008060008060008060008060c0898b0312156126f2578182fd5b88356126fd81612fb3565b975060208901356001600160401b0380821115612718578384fd5b6127248c838d01612307565b909950975060408b013591508082111561273c578384fd5b6127488c838d01612307565b909750955060608b0135915080821115612760578384fd5b5061276d8b828c01612240565b935050608089013561277e81612fb3565b915061278c60a08a0161234d565b90509295985092959890939650565b60008060008060008060008060c0898b0312156127b6578182fd5b88356127c181612fb3565b975060208901356001600160401b03808211156127dc578384fd5b6127e88c838d01612307565b909950975060408b0135915080821115612800578384fd5b5061280d8b828c01612307565b90965094505060608901359250608089013561277e81612fb3565b6000806000806080858703121561283d578182fd5b843561284881612fb3565b935060208501356001600160401b0380821115612863578384fd5b61286f8883890161229d565b94506040870135915080821115612884578384fd5b506128918782880161229d565b92505060608501356128a281612fb3565b939692955090935050565b600080604083850312156128bf578182fd5b82356128ca81612fb3565b946020939093013593505050565b6000806000606084860312156128ec578081fd5b83356128f781612fb3565b92506020840135915060408401356001600160401b03811115612918578182fd5b612924868287016121d9565b9150509250925092565b60006020828403121561293f578081fd5b81516001600160e01b03198116811461237a578182fd5b600060208284031215612967578081fd5b81356001600160401b0381111561297c578182fd5b6129888482850161229d565b949350505050565b6000602082840312156129a1578081fd5b5051919050565b6000602082840312156129b9578081fd5b61237a8261234d565b6000815180845260208085019450808401835b838110156129f1578151875295820195908201906001016129d5565b509495945050505050565b60008151808452612a14816020860160208601612eea565b601f01601f19169290920160200192915050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008251612a64818460208701612eea565b9190910192915050565b600060018060a01b03808816835260a06020840152612a9060a08401886129c2565b8381036040850152612aa281886129c2565b959091166060840152505060ff919091166080909101529392505050565b600060018060a01b03808b16835260c06020840152612ae360c084018a8c612a28565b8381036040850152612af681898b612a28565b90508381036060850152612b0a81886129c2565b959091166080840152505060ff9190911660a0909101529695505050505050565b600060018060a01b03808b16835260c06020840152612b4e60c084018a8c612a28565b8381036040850152612b6181898b612a28565b92505085606084015280851660808401525060ff831660a08301529998505050505050505050565b600060018060a01b03808716835260806020840152612bab60808401876129fc565b8381036040850152612bbd81876129fc565b92505080841660608401525095945050505050565b600060018060a01b03851682528360208301526060604083015261213760608301846129fc565b600060018060a01b038616825284602083015283604083015260806060830152612c2660808301846129fc565b9695505050505050565b600060808252612c4360808301876129c2565b8281036020840152612c5581876129c2565b6001600160a01b03959095166040840152505060ff9190911660609091015292915050565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090612cb3908301856129fc565b90508260a0830152979650505050505050565b8781526001600160a01b03878116602083015286166040820152606081018590526080810184905260e060a08201819052600090612d06908301856129fc565b90508260c083015298975050505050505050565b60008382526040602083015261298860408301846129fc565b600060a08252612d4760a08301898b612a28565b8281036020840152612d5a81888a612a28565b90508281036040840152612d6e81876129c2565b6001600160a01b03959095166060840152505060ff9190911660809091015295945050505050565b600060a08252612daa60a08301898b612a28565b8281036020840152612dbd81888a612a28565b604084019690965250506001600160a01b0392909216606083015260ff16608090910152949350505050565b60006020825261237a60208301846129fc565b600060408252612e0f60408301856129fc565b828103602084015261213781856129fc565b60208082526010908201526f29a427acaa9d102327a92124a22222a760811b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715612ea857612ea8612f9d565b604052919050565b60006001600160401b03821115612ec957612ec9612f9d565b5060051b60200190565b600082821015612ee557612ee5612f87565b500390565b60005b83811015612f05578181015183820152602001612eed565b83811115612f14576000848401525b50505050565b600081612f2957612f29612f87565b506000190190565b600181811c90821680612f4557607f821691505b60208210811415612f6657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612f8057612f80612f87565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612fc857600080fd5b5056fe13649b2456f1b42fef0f0040b3aaeabcd21a76a0f3f5defd4f583839455116e8a2646970667358221220a79f298b2c0e5975fbff5ffc8faa253cbe9849e8d7d561c33c65215f70fe46b364736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4212,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_targets721",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4215,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_targets1155",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4218,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_targetsSocialToken",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4220,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_protocolFeeRecipient",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 4222,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_protocolFee",
        "offset": 20,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 4224,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_operationalFeeRecipient",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 4226,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "_operationalFee",
        "offset": 20,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 4231,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "nonces721",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4236,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "nonces1155",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4239,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "baseURI721",
        "offset": 0,
        "slot": "8",
        "type": "t_string_storage"
      },
      {
        "astId": 4242,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "baseURI1155",
        "offset": 0,
        "slot": "9",
        "type": "t_string_storage"
      },
      {
        "astId": 4245,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "erc721Exchange",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 4248,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "erc1155Exchange",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 4253,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "isDeployerWhitelisted",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4258,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "isStrategyWhitelisted",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4264,
        "contract": "contracts/TokenFactory.sol:TokenFactory",
        "label": "tagNonces",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}