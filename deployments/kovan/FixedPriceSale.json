{
  "address": "0x18ad4d775Ea3Dd8A51c6Dd4bEADA6bc1A0c61239",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "canBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidPrice",
          "type": "uint256"
        }
      ],
      "name": "canExecute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd4fdafe231a200bbeb94a2c43afd09d8f84248668411d7fe5ad4f854841290be",
  "receipt": {
    "to": null,
    "from": "0x80417137E490A5091dCAB34E85C457BB97c93161",
    "contractAddress": "0x18ad4d775Ea3Dd8A51c6Dd4bEADA6bc1A0c61239",
    "transactionIndex": 0,
    "gasUsed": "207278",
    "logsBloom": "0x
    "blockHash": "0x56908cb976bbcadcaa1e88221df536bb72a4e7faa23baa2fe07a76a90e0ccbef",
    "transactionHash": "0xd4fdafe231a200bbeb94a2c43afd09d8f84248668411d7fe5ad4f854841290be",
    "logs": [],
    "blockNumber": 26762684,
    "cumulativeGasUsed": "207278",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "562d54fd37b762a2a427a74d200d6661",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"canBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"}],\"name\":\"canExecute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/FixedPriceSale.sol\":\"FixedPriceSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"../libraries/Orders.sol\\\";\\n\\ninterface IStrategy {\\n    function canExecute(\\n        uint256 deadline,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice\\n    ) external view returns (bool);\\n\\n    function canBid(\\n        uint256 deadline,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice,\\n        uint256 bestBidPrice,\\n        uint256 bestBidBlock\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0c379707f5d112df6ac23a176e2d77b127b756c0a765f2eb3f10f6ab7c30212f\",\"license\":\"MIT\"},\"contracts/libraries/Orders.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nlibrary Orders {\\n    // keccak256(\\\"Ask(address signer,address token,uint256 tokenId,uint256 amount,address strategy,address currency,address recipient,uint256 deadline,bytes params)\\\")\\n    bytes32 internal constant ASK_TYPEHASH = 0x17fdf8831f8bd77353b30f42ba9bc64e7144545a42a890389f298feeb45dec88;\\n    // keccak256(\\\"Bid(bytes32 askHash,address signer,uint256 amount,uint256 price,address recipient,address referrer)\\\")\\n    bytes32 internal constant BID_TYPEHASH = 0xb98e1dc48988064e6dfb813618609d7da80a8841e5f277039788ac4b50d497b2;\\n\\n    struct Ask {\\n        address signer;\\n        address token;\\n        uint256 tokenId;\\n        uint256 amount;\\n        address strategy;\\n        address currency;\\n        address recipient;\\n        uint256 deadline;\\n        bytes params;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    struct Bid {\\n        bytes32 askHash;\\n        address signer;\\n        uint256 amount;\\n        uint256 price;\\n        address recipient;\\n        address referrer;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    function hash(Ask memory ask) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    ASK_TYPEHASH,\\n                    ask.signer,\\n                    ask.token,\\n                    ask.tokenId,\\n                    ask.amount,\\n                    ask.strategy,\\n                    ask.currency,\\n                    ask.recipient,\\n                    ask.deadline,\\n                    keccak256(ask.params)\\n                )\\n            );\\n    }\\n\\n    function hash(Bid memory bid) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(BID_TYPEHASH, bid.askHash, bid.signer, bid.amount, bid.price, bid.recipient, bid.referrer)\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xa35b519fac6ea626cc3b133907138ed75f3389c0a1bb4f771cfd5ec820caca23\",\"license\":\"MIT\"},\"contracts/strategies/FixedPriceSale.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nimport \\\"../interfaces/IStrategy.sol\\\";\\n\\ncontract FixedPriceSale is IStrategy {\\n    function canExecute(\\n        uint256 deadline,\\n        bytes memory params,\\n        address,\\n        uint256 bidPrice\\n    ) external view override returns (bool) {\\n        uint256 price = abi.decode(params, (uint256));\\n        require(price > 0, \\\"SHOYU: INVALID_PRICE\\\");\\n        return block.number <= deadline && bidPrice == price;\\n    }\\n\\n    function canBid(\\n        uint256,\\n        bytes memory,\\n        address,\\n        uint256,\\n        uint256,\\n        uint256\\n    ) external pure override returns (bool) {\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0x2b12a8041e0efa596ba171ca3f1f04af3e8fd4122ae3c17545cb5815e812b4e0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636281869a1461003b578063e01be26314610069575b600080fd5b61005561004936600461020c565b60009695505050505050565b604051901515815260200160405180910390f35b6100556100773660046101af565b6000808480602001905181019061008e9190610197565b9050600081116100db5760405162461bcd60e51b815260206004820152601460248201527353484f59553a20494e56414c49445f505249434560601b604482015260640160405180910390fd5b8543111580156100ea57508083145b9695505050505050565b80356001600160a01b038116811461010b57600080fd5b919050565b600082601f830112610120578081fd5b813567ffffffffffffffff8082111561013b5761013b61027d565b604051601f8301601f19908116603f011681019082821181831017156101635761016361027d565b8160405283815286602085880101111561017b578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156101a8578081fd5b5051919050565b600080600080608085870312156101c4578283fd5b84359350602085013567ffffffffffffffff8111156101e1578384fd5b6101ed87828801610110565b9350506101fc604086016100f4565b9396929550929360600135925050565b60008060008060008060c08789031215610224578182fd5b86359550602087013567ffffffffffffffff811115610241578283fd5b61024d89828a01610110565b95505061025c604088016100f4565b9350606087013592506080870135915060a087013590509295509295509295565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b5f0b54054c6793e04ef05bce30b5ba925b5b403f8e5b933e76f6ba67c05215d64736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636281869a1461003b578063e01be26314610069575b600080fd5b61005561004936600461020c565b60009695505050505050565b604051901515815260200160405180910390f35b6100556100773660046101af565b6000808480602001905181019061008e9190610197565b9050600081116100db5760405162461bcd60e51b815260206004820152601460248201527353484f59553a20494e56414c49445f505249434560601b604482015260640160405180910390fd5b8543111580156100ea57508083145b9695505050505050565b80356001600160a01b038116811461010b57600080fd5b919050565b600082601f830112610120578081fd5b813567ffffffffffffffff8082111561013b5761013b61027d565b604051601f8301601f19908116603f011681019082821181831017156101635761016361027d565b8160405283815286602085880101111561017b578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156101a8578081fd5b5051919050565b600080600080608085870312156101c4578283fd5b84359350602085013567ffffffffffffffff8111156101e1578384fd5b6101ed87828801610110565b9350506101fc604086016100f4565b9396929550929360600135925050565b60008060008060008060c08789031215610224578182fd5b86359550602087013567ffffffffffffffff811115610241578283fd5b61024d89828a01610110565b95505061025c604088016100f4565b9350606087013592506080870135915060a087013590509295509295509295565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b5f0b54054c6793e04ef05bce30b5ba925b5b403f8e5b933e76f6ba67c05215d64736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}