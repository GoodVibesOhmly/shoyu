{
  "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bestBidPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "canBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "bestBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bestBidPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "canClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb2ebc0d8fbd8b6813bb683b7b8735522c856f08c1fa602d208be97a60fc0a9ec",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
    "transactionIndex": 0,
    "gasUsed": "278211",
    "logsBloom": "0x
    "blockHash": "0xcecf0c1777c7afa9c59551968c688271dd09502584cd6d96536655a943fdf385",
    "transactionHash": "0xb2ebc0d8fbd8b6813bb683b7b8735522c856f08c1fa602d208be97a60fc0a9ec",
    "logs": [],
    "blockNumber": 17,
    "cumulativeGasUsed": "278211",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e3c62f23f4c4ecd0f31deadf57fa7733",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bestBidPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"canBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bestBidPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/EnglishAuction.sol\":\"EnglishAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"../libraries/Orders.sol\\\";\\n\\ninterface IStrategy {\\n    function canClaim(\\n        address proxy,\\n        uint256 deadline,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice,\\n        address bestBidder,\\n        uint256 bestBidPrice,\\n        uint256 bestBidTimestamp\\n    ) external view returns (bool);\\n\\n    function canBid(\\n        address proxy,\\n        uint256 deadline,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice,\\n        address bestBidder,\\n        uint256 bestBidPrice,\\n        uint256 bestBidTimestamp\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9523c2173e0661cecb24d35404c65dc63660772f5247bacc141e485513d22b5f\",\"license\":\"MIT\"},\"contracts/libraries/Orders.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nlibrary Orders {\\n    // keccak256(\\\"Ask(address signer,address proxy,address token,uint256 tokenId,uint256 amount,address strategy,address currency,address recipient,uint256 deadline,bytes params)\\\")\\n    bytes32 internal constant ASK_TYPEHASH = 0x5fbc9a24e1532fa5245d1ec2dc5592849ae97ac5475f361b1a1f7a6e2ac9b2fd;\\n    // keccak256(\\\"Bid(bytes32 askHash,address signer,uint256 amount,uint256 price,address recipient,address referrer)\\\")\\n    bytes32 internal constant BID_TYPEHASH = 0xb98e1dc48988064e6dfb813618609d7da80a8841e5f277039788ac4b50d497b2;\\n\\n    struct Ask {\\n        address signer;\\n        address proxy;\\n        address token;\\n        uint256 tokenId;\\n        uint256 amount;\\n        address strategy;\\n        address currency;\\n        address recipient;\\n        uint256 deadline;\\n        bytes params;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    struct Bid {\\n        bytes32 askHash;\\n        address signer;\\n        uint256 amount;\\n        uint256 price;\\n        address recipient;\\n        address referrer;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    function hash(Ask memory ask) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    ASK_TYPEHASH,\\n                    ask.signer,\\n                    ask.proxy,\\n                    ask.token,\\n                    ask.tokenId,\\n                    ask.amount,\\n                    ask.strategy,\\n                    ask.currency,\\n                    ask.recipient,\\n                    ask.deadline,\\n                    keccak256(ask.params)\\n                )\\n            );\\n    }\\n\\n    function hash(Bid memory bid) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(BID_TYPEHASH, bid.askHash, bid.signer, bid.amount, bid.price, bid.recipient, bid.referrer)\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xf6bf58506ceb341b7d4664dd3ba50b682a2d823dfa1473180328e170226e877d\",\"license\":\"MIT\"},\"contracts/strategies/EnglishAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nimport \\\"../interfaces/IStrategy.sol\\\";\\n\\ncontract EnglishAuction is IStrategy {\\n    function canClaim(\\n        address proxy,\\n        uint256 deadline,\\n        bytes memory params,\\n        address bidder,\\n        uint256 bidPrice,\\n        address bestBidder,\\n        uint256 bestBidPrice,\\n        uint256\\n    ) external view override returns (bool) {\\n        if (proxy == address(0)) {\\n            return bidder == bestBidder && bidPrice == bestBidPrice && deadline < block.timestamp;\\n        } else {\\n            (uint256 startPrice, uint256 startedAt) = abi.decode(params, (uint256, uint256));\\n            require(startPrice > 0, \\\"SHOYU: INVALID_START_PRICE\\\");\\n            require(startedAt < deadline, \\\"SHOYU: INVALID_STARTED_AT\\\");\\n\\n            return bidPrice >= startPrice && deadline < block.timestamp;\\n        }\\n    }\\n\\n    function canBid(\\n        address proxy,\\n        uint256 deadline,\\n        bytes memory params,\\n        address,\\n        uint256 bidPrice,\\n        address,\\n        uint256 bestBidPrice,\\n        uint256\\n    ) external view override returns (bool) {\\n        if (proxy == address(0)) {\\n            (uint256 startPrice, uint256 startedAt) = abi.decode(params, (uint256, uint256));\\n            require(startPrice > 0, \\\"SHOYU: INVALID_START_PRICE\\\");\\n            require(startedAt < deadline, \\\"SHOYU: INVALID_STARTED_AT\\\");\\n\\n            return block.timestamp <= deadline && bidPrice >= startPrice && bidPrice > bestBidPrice;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x01cd13dd2dadd9637d9425b62ec324482e8b3ad1ff00d7ea4e01a875972f232b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610412806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063610e2d3b1461003b578063e9b3838f14610062575b600080fd5b61004e61004936600461029f565b610075565b604051901515815260200160405180910390f35b61004e61007036600461029f565b610192565b60006001600160a01b0389166100b757836001600160a01b0316866001600160a01b03161480156100a557508285145b80156100b057504288105b9050610186565b600080888060200190518101906100ce91906103a3565b91509150600082116101275760405162461bcd60e51b815260206004820152601a60248201527f53484f59553a20494e56414c49445f53544152545f505249434500000000000060448201526064015b60405180910390fd5b8981106101725760405162461bcd60e51b815260206004820152601960248201527814d213d6554e881253959053125117d4d5105495115117d055603a1b604482015260640161011e565b8187101580156101815750428a105b925050505b98975050505050505050565b60006001600160a01b03891661027b57600080888060200190518101906101b991906103a3565b915091506000821161020d5760405162461bcd60e51b815260206004820152601a60248201527f53484f59553a20494e56414c49445f53544152545f5052494345000000000000604482015260640161011e565b8981106102585760405162461bcd60e51b815260206004820152601960248201527814d213d6554e881253959053125117d4d5105495115117d055603a1b604482015260640161011e565b8942111580156102685750818710155b8015610181575084871192505050610186565b506000610186565b80356001600160a01b038116811461029a57600080fd5b919050565b600080600080600080600080610100898b0312156102bb578384fd5b6102c489610283565b975060208901359650604089013567ffffffffffffffff808211156102e7578586fd5b818b0191508b601f8301126102fa578586fd5b81358181111561030c5761030c6103c6565b604051601f8201601f19908116603f01168101908382118183101715610334576103346103c6565b816040528281528e602084870101111561034c578889fd5b8260208601602083013791820160200188905250975061037191505060608a01610283565b94506080890135935061038660a08a01610283565b925060c0890135915060e089013590509295985092959890939650565b600080604083850312156103b5578182fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ecfe0040e96411dead6b2a8dbb1f370ce4c48cfc6e1026a9c28e29094a9df3ff64736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063610e2d3b1461003b578063e9b3838f14610062575b600080fd5b61004e61004936600461029f565b610075565b604051901515815260200160405180910390f35b61004e61007036600461029f565b610192565b60006001600160a01b0389166100b757836001600160a01b0316866001600160a01b03161480156100a557508285145b80156100b057504288105b9050610186565b600080888060200190518101906100ce91906103a3565b91509150600082116101275760405162461bcd60e51b815260206004820152601a60248201527f53484f59553a20494e56414c49445f53544152545f505249434500000000000060448201526064015b60405180910390fd5b8981106101725760405162461bcd60e51b815260206004820152601960248201527814d213d6554e881253959053125117d4d5105495115117d055603a1b604482015260640161011e565b8187101580156101815750428a105b925050505b98975050505050505050565b60006001600160a01b03891661027b57600080888060200190518101906101b991906103a3565b915091506000821161020d5760405162461bcd60e51b815260206004820152601a60248201527f53484f59553a20494e56414c49445f53544152545f5052494345000000000000604482015260640161011e565b8981106102585760405162461bcd60e51b815260206004820152601960248201527814d213d6554e881253959053125117d4d5105495115117d055603a1b604482015260640161011e565b8942111580156102685750818710155b8015610181575084871192505050610186565b506000610186565b80356001600160a01b038116811461029a57600080fd5b919050565b600080600080600080600080610100898b0312156102bb578384fd5b6102c489610283565b975060208901359650604089013567ffffffffffffffff808211156102e7578586fd5b818b0191508b601f8301126102fa578586fd5b81358181111561030c5761030c6103c6565b604051601f8201601f19908116603f01168101908382118183101715610334576103346103c6565b816040528281528e602084870101111561034c578889fd5b8260208601602083013791820160200188905250975061037191505060608a01610283565b94506080890135935061038660a08a01610283565b925060c0890135915060e089013590509295985092959890939650565b600080604083850312156103b5578182fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ecfe0040e96411dead6b2a8dbb1f370ce4c48cfc6e1026a9c28e29094a9df3ff64736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}