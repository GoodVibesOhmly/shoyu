/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnglishAuction,
  EnglishAuctionInterface,
} from "../EnglishAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x7330e000",
        type: "bytes32",
      },
    ],
    name: "c_0x7330e000",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bestBidPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "canBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bestBidPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107bd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806342a9748d146100465780635f11a72b146100625780636511995114610092575b600080fd5b610060600480360381019061005b919061046b565b6100c2565b005b61007c600480360381019061007791906104bd565b6100c5565b60405161008991906105a5565b60405180910390f35b6100ac60048036038101906100a791906104bd565b6102d7565b6040516100b991906105a5565b60405180910390f35b50565b60006100f37fd835c3dda9ac2bc554c5ec966baf6103df4c2b67ad1ee5e6bc04a5bf0ed1c9c260001b6100c2565b61011f7f1fdda5ff85c387855fc090d3bc73e8104877d5b947b2caaf47b5991111f8e68260001b6100c2565b61014b7fc54be510f84cc8263cc8dc2854b62efdec27c20c926f33084ad29efdc04946cf60001b6100c2565b6000878060200190518101906101619190610494565b905061018f7f1c0723cfa4669862ae01d2b4b0bbe85a5f8463bffc61dbcb6585bd025b4377f660001b6100c2565b6101bb7f624cbf74cb9117b11e9f5282e4381bd93e143f919ca3e01dff1334550f20f3c960001b6100c2565b6101e77f01e65e4a61d6f4b6d36f77418cc18289b352319a83bdcd52388c583d40f7c05760001b6100c2565b6000811161022a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610221906105c0565b60405180910390fd5b6102567f468e303708429d07bf322f8ced2dc1f534ac19c53c9e19224d71318a03d9990c60001b6100c2565b6102827fb4138a94989698a81f1cfd37c31eec19194447eb7664d2b339d2920639876f6960001b6100c2565b6102ae7fc0bd8926cf347e35eed90d925744cc83163850982041427f5667d6128272ce7b60001b6100c2565b8843111580156102be5750808610155b80156102c957508386115b915050979650505050505050565b60006103057fbc8b10fa7b85f3852fb88a6e4942d272298aa822fa10a648847304ee0ac1697360001b6100c2565b6103317fddf617629a8cbf2be5f6222ba9016a943854b6ce4ff8db04213abcf45b79d28060001b6100c2565b61035d7f3fa7ed7fe3f60ce083ba86e0ce664d04fc8c1549a685f1b40a4aab3fd2ce1e1360001b6100c2565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614801561039757508285145b80156103a257504388105b9050979650505050505050565b60006103c26103bd84610605565b6105e0565b9050828152602081018484840111156103da57600080fd5b6103e5848285610699565b509392505050565b6000813590506103fc81610742565b92915050565b60008135905061041181610759565b92915050565b600082601f83011261042857600080fd5b81356104388482602086016103af565b91505092915050565b60008135905061045081610770565b92915050565b60008151905061046581610770565b92915050565b60006020828403121561047d57600080fd5b600061048b84828501610402565b91505092915050565b6000602082840312156104a657600080fd5b60006104b484828501610456565b91505092915050565b600080600080600080600060e0888a0312156104d857600080fd5b60006104e68a828b01610441565b975050602088013567ffffffffffffffff81111561050357600080fd5b61050f8a828b01610417565b96505060406105208a828b016103ed565b95505060606105318a828b01610441565b94505060806105428a828b016103ed565b93505060a06105538a828b01610441565b92505060c06105648a828b01610441565b91505092959891949750929550565b61057c81610659565b82525050565b600061058f601a83610636565b915061059a82610719565b602082019050919050565b60006020820190506105ba6000830184610573565b92915050565b600060208201905081810360008301526105d981610582565b9050919050565b60006105ea6105fb565b90506105f682826106a8565b919050565b6000604051905090565b600067ffffffffffffffff8211156106205761061f6106d9565b5b61062982610708565b9050602081019050919050565b600082825260208201905092915050565b60006106528261066f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6106b182610708565b810181811067ffffffffffffffff821117156106d0576106cf6106d9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f53484f59553a20494e56414c49445f53544152545f5052494345000000000000600082015250565b61074b81610647565b811461075657600080fd5b50565b61076281610665565b811461076d57600080fd5b50565b6107798161068f565b811461078457600080fd5b5056fea26469706673582212202c8a7668eaf2c670662691684bd736cf5be97c88e7875e82c1785b75eb9757bd64736f6c63430008030033";

export class EnglishAuction__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnglishAuction> {
    return super.deploy(overrides || {}) as Promise<EnglishAuction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EnglishAuction {
    return super.attach(address) as EnglishAuction;
  }
  connect(signer: Signer): EnglishAuction__factory {
    return super.connect(signer) as EnglishAuction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnglishAuctionInterface {
    return new utils.Interface(_abi) as EnglishAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnglishAuction {
    return new Contract(address, _abi, signerOrProvider) as EnglishAuction;
  }
}
