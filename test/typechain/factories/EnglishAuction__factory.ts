/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnglishAuction,
  EnglishAuctionInterface,
} from "../EnglishAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bestBidPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "canBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bestBidPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635f11a72b1461003b5780636511995114610062575b600080fd5b61004e610049366004610177565b610075565b604051901515815260200160405180910390f35b61004e610070366004610177565b61010a565b6000808780602001905181019061008c919061015f565b9050600081116100e25760405162461bcd60e51b815260206004820152601a60248201527f53484f59553a20494e56414c49445f53544152545f5052494345000000000000604482015260640160405180910390fd5b8843111580156100f25750808610155b80156100fd57508386115b9998505050505050505050565b6000836001600160a01b0316866001600160a01b031614801561012c57508285145b801561013757504388105b98975050505050505050565b80356001600160a01b038116811461015a57600080fd5b919050565b600060208284031215610170578081fd5b5051919050565b600080600080600080600060e0888a031215610191578283fd5b87359650602088013567ffffffffffffffff808211156101af578485fd5b818a0191508a601f8301126101c2578485fd5b8135818111156101d4576101d461026a565b604051601f8201601f19908116603f011681019083821181831017156101fc576101fc61026a565b816040528281528d6020848701011115610214578788fd5b8260208601602083013791820160200187905250975061023991505060408901610143565b94506060880135935061024e60808901610143565b925060a0880135915060c0880135905092959891949750929550565b634e487b7160e01b600052604160045260246000fdfea264697066735822122018c3466a61f8c5d136c57bba9f01291dce69dd3f00a1141c2fdcff4f389d89a064736f6c63430008030033";

export class EnglishAuction__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnglishAuction> {
    return super.deploy(overrides || {}) as Promise<EnglishAuction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EnglishAuction {
    return super.attach(address) as EnglishAuction;
  }
  connect(signer: Signer): EnglishAuction__factory {
    return super.connect(signer) as EnglishAuction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnglishAuctionInterface {
    return new utils.Interface(_abi) as EnglishAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnglishAuction {
    return new Contract(address, _abi, signerOrProvider) as EnglishAuction;
  }
}
