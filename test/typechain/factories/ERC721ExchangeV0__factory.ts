/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721ExchangeV0,
  ERC721ExchangeV0Interface,
} from "../ERC721ExchangeV0";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factory_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "Bid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "amountFilled",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "askHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "approvedBidHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "bidHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "bestBid",
    outputs: [
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Orders.Ask",
        name: "askOrder",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidRecipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "bidReferrer",
        type: "address",
      },
    ],
    name: "bid",
    outputs: [
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Orders.Ask",
        name: "askOrder",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "askHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Orders.Bid",
        name: "bidOrder",
        type: "tuple",
      },
    ],
    name: "bid",
    outputs: [
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
    ],
    name: "canTrade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Orders.Ask",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Orders.Ask",
        name: "askOrder",
        type: "tuple",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isCancelledOrClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "askHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "bidHash",
        type: "bytes32",
      },
    ],
    name: "updateApprovedBidHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162002e7138038062002e71833981016040819052620000349162000562565b6200003e620000fd565b606081901b6001600160601b03191660c0524660a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200008c30620001b2602090811b62000b9217901c565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f1981840301815291905280516020909101206080525062000616565b600054610100900460ff168062000117575060005460ff16155b6200016f5760405162461bcd60e51b815260206004820152602e602482015260008051602062002e5183398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff1615801562000192576000805461ffff19166101011790555b6200019c62000219565b8015620001af576000805461ff00191690555b50565b606081620001dc57506040805180820190915260048152630307830360e41b602082015262000214565b8160005b8115620002035780620001f381620005e2565b915050600882901c9150620001e0565b6200020f8482620002b4565b925050505b919050565b600054610100900460ff168062000233575060005460ff16155b620002875760405162461bcd60e51b815260206004820152602e602482015260008051602062002e5183398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000166565b600054610100900460ff16158015620002aa576000805461ffff19166101011790555b6200019c620004b0565b60606000620002c5836002620005a6565b620002d29060026200058b565b6001600160401b03811115620002f857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801562000323576020820181803683370190505b509050600360fc1b816000815181106200034d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200038b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000620003b1846002620005a6565b620003be9060016200058b565b90505b600181111562000458576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106200040257634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106200042757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936200045081620005c8565b9050620003c1565b508315620004a95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000166565b9392505050565b600054610100900460ff1680620004ca575060005460ff16155b6200051e5760405162461bcd60e51b815260206004820152602e602482015260008051602062002e5183398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000166565b600054610100900460ff1615801562000541576000805461ffff19166101011790555b6000805462ff0000191690558015620001af576000805461ff001916905550565b60006020828403121562000574578081fd5b81516001600160a01b0381168114620004a9578182fd5b60008219821115620005a157620005a162000600565b500190565b6000816000190483118215151615620005c357620005c362000600565b500290565b600081620005da57620005da62000600565b506000190190565b6000600019821415620005f957620005f962000600565b5060010190565b634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160601c6127f36200065e600039600081816102330152818161053e015281816115d601526116e1015260006102ac015260006102d401526127f36000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063768826631161007157806376882663146101d2578063b81e846614610213578063c45a015514610226578063cb27e1b61461025d578063d0d0924614610270578063e331a71514610283576100b4565b80633644e515146100b957806338bc54cd146100d45780633cf32cd1146100f7578063559f05dc1461010c5780635771f9971461011f57806375e6590f146101b2575b600080fd5b6100c16102a6565b6040519081526020015b60405180910390f35b6100e76100e236600461248d565b61038f565b60405190151581526020016100cb565b61010a610105366004612387565b610431565b005b6100e761011a36600461222d565b61051c565b61017361012d366004612310565b60026020819052600091825260409091208054600182015492820154600383015460048401546005909401546001600160a01b0393841695949293918216929091169086565b604080516001600160a01b03978816815260208101969096528501939093529084166060840152909216608082015260a081019190915260c0016100cb565b6100c16101c0366004612310565b60046020526000908152604090205481565b61010a6101e0366004612328565b3360009081526001602090815260408083209583529481528482206001600160a01b039490941682529290925291902055565b6100e76102213660046123ba565b6105c3565b6040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016100cb565b6100c161026b366004612249565b610795565b61010a61027e366004612387565b6107cb565b6100e7610291366004612310565b60036020526000908152604090205460ff1681565b600080467f000000000000000000000000000000000000000000000000000000000000000014156102f857507f000000000000000000000000000000000000000000000000000000000000000061038a565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61032230610b92565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c0016040516020818303038152906040528051906020012090505b905090565b6000805460ff62010000909104161515600114156103c85760405162461bcd60e51b81526004016103bf90612643565b60405180910390fd5b6000805462ff000019166201000017905560208601516001600160a01b0316156104045760405162461bcd60e51b81526004016103bf90612619565b61041b8661041188610bef565b3388888888610cdc565b6000805462ff0000191690559695505050505050565b80516001600160a01b0316331480610455575060208101516001600160a01b031633145b6104715760405162461bcd60e51b81526004016103bf90612619565b600061047c82610bef565b6000818152600260205260409020549091506001600160a01b0316156104d85760405162461bcd60e51b815260206004820152601160248201527053484f59553a204249445f45584953545360781b60448201526064016103bf565b600081815260036020526040808220805460ff191660011790555182917fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a91a25050565b604051635ef0036960e01b81526001600160a01b0382811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635ef003699060240160206040518083038186803b15801561058257600080fd5b505afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906122f0565b1590505b919050565b6000805460ff62010000909104161515600114156105f35760405162461bcd60e51b81526004016103bf90612643565b6000805462ff000019166201000017815561060d84610bef565b835190915081146106585760405162461bcd60e51b81526020600482015260156024820152740a6909eb2aa7440aa9c9a82a886908a88be9082a69605b1b60448201526064016103bf565b60208301516001600160a01b03166106aa5760405162461bcd60e51b815260206004820152601560248201527429a427acaa9d1024a72b20a624a22fa9a4a3a722a960591b60448201526064016103bf565b60006106b58461118e565b60208601519091506001600160a01b0316156107375760208501516001600160a01b031633148061071b57506020808601516001600160a01b03908116600090815260018352604080822086835284528082208885015190931682529190925290205481145b6107375760405162461bcd60e51b81526004016103bf90612619565b61075d8185602001518660c001518760e001518861010001516107586102a6565b611219565b610780858386602001518760400151886060015189608001518a60a00151610cdc565b6000805462ff00001916905595945050505050565b6001600160a01b0380841660009081526001602090815260408083208684528252808320938516835292905220545b9392505050565b60005460ff62010000909104161515600114156107fa5760405162461bcd60e51b81526004016103bf90612643565b6000805462ff000019166201000017905560408101516108199061051c565b61085f5760405162461bcd60e51b815260206004820152601760248201527653484f59553a20494e56414c49445f45584348414e474560481b60448201526064016103bf565b600061086a82610bef565b905061087682826113d8565b6108998183600001518461014001518561016001518661018001516107586102a6565b600081815260026020818152604092839020835160c08101855281546001600160a01b03908116808352600184015483860152948301548287018190526003840154821660608401526004808501548316608085015260059094015460a08085018290528a0151958a01516101008b01516101208c0151995163610e2d3b60e01b81529599979094169763610e2d3b9761094197929690949193919284928492909101612563565b60206040518083038186803b15801561095957600080fd5b505afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099191906122f0565b6109ce5760405162461bcd60e51b815260206004820152600e60248201526d53484f59553a204641494c55524560901b60448201526064016103bf565b60e08301516001600160a01b0381166109e5575082515b600083815260036020908152604091829020805460ff1916600117905585820151606087015160c088015186519387015194870151610a3695939492939192918791610a3191906126d6565b6116c3565b610a825760405162461bcd60e51b815260206004820152601f60248201527f53484f59553a204641494c45445f544f5f5452414e534645525f46554e44530060448201526064016103bf565b60208083015160008581526004909252604090912054610aa2919061269e565b60008481526004602052604090205560608201516001600160a01b038116610ac8575081515b610ae585604001518660000151838860600151876020015161193f565b600084815260026020818152604080842080546001600160a01b031990811682556001820186905593810185905560038101805485169055600481018054909416909355600590920192909255845191850151858201516080870151925188947f0642c67a22e8657a7126bb3b9fb3f01965503642f884e4c6a1efd8ed24f46c0d94610b7794919391928891906125bb565b60405180910390a250506000805462ff000019169055505050565b606081610bba57506040805180820190915260048152630307830360e41b60208201526105be565b8160005b8115610bdd5780610bce8161274f565b915050600882901c9150610bbe565b610be784826119b0565b949350505050565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a01516101008b01516101208c01518051908b0120975160009b610cbf9b7f5fbc9a24e1532fa5245d1ec2dc5592849ae97ac5475f361b1a1f7a6e2ac9b2fd9b919a919998979695949392019a8b526001600160a01b03998a1660208c015297891660408b015295881660608a0152608089019490945260a0880192909252851660c0870152841660e08601529092166101008401526101208301919091526101408201526101600190565b604051602081830303815290604052805190602001209050919050565b6000610ceb886040015161051c565b610d315760405162461bcd60e51b815260206004820152601760248201527653484f59553a20494e56414c49445f45584348414e474560481b60448201526064016103bf565b60008511610d795760405162461bcd60e51b815260206004820152601560248201527414d213d6554e881253959053125117d05353d55395605a1b60448201526064016103bf565b6000878152600460205260409020546080890151610d97878361269e565b1115610dd75760405162461bcd60e51b815260206004820152600f60248201526e14d213d6554e8814d3d31117d3d555608a1b60448201526064016103bf565b610de189896113d8565b610e04888a600001518b61014001518c61016001518d61018001516107586102a6565b6000600260008a815260200190815260200160002090508960a001516001600160a01b031663610e2d3b8b602001518c61010001518d61012001518c8b8760000160009054906101000a90046001600160a01b0316886002015489600501546040518963ffffffff1660e01b8152600401610e86989796959493929190612563565b60206040518083038186803b158015610e9e57600080fd5b505afa158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed691906122f0565b15610fee57610ee5878361269e565b60008a81526004602052604090205560e08a01516001600160a01b038116610f0b575089515b610f2b8b604001518c606001518d60c001518c858d8d610a3191906126d6565b610f775760405162461bcd60e51b815260206004820152601f60248201527f53484f59553a204641494c45445f544f5f5452414e534645525f46554e44530060448201526064016103bf565b6001600160a01b038616610f89578895505b610fa28b604001518c60000151888e606001518c61193f565b897f0642c67a22e8657a7126bb3b9fb3f01965503642f884e4c6a1efd8ed24f46c0d8a8a8a8a8a604051610fda9594939291906125bb565b60405180910390a260019350505050611183565b8960a001516001600160a01b031663e9b3838f8b602001518c61010001518d61012001518c8b8760000160009054906101000a90046001600160a01b0316886002015489600501546040518963ffffffff1660e01b8152600401611059989796959493929190612563565b60206040518083038186803b15801561107157600080fd5b505afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a991906122f0565b1561114a5780546001600160a01b03808a166001600160a01b031992831617835560018301899055600283018890556003830180548883169084161790556004830180549187169190921617905542600582015560405189907f4055f76fe1f351fec66b9ba790ddbdc29eb45c038163a6b1327277441a8c65f190611137908b908b908b908b908b906125bb565b60405180910390a2600092505050611183565b60405162461bcd60e51b815260206004820152600e60248201526d53484f59553a204641494c55524560901b60448201526064016103bf565b979650505050505050565b80516020808301516040808501516060860151608087015160a08801519351600097610cbf977fb98e1dc48988064e6dfb813618609d7da80a8841e5f277039788ac4b50d497b297919691959493920196875260208701959095526001600160a01b03938416604087015260608601929092526080850152811660a08401521660c082015260e00190565b60405161190160f01b6020820152602281018290526042810187905260009060620160405160208183030381529060405280519060200120905061125d863b151590565b1561136d57604080516020810186905280820185905260f887901b6001600160f81b0319166060820152815160418183030181526061820192839052630b135d3f60e11b9092526001600160a01b03881691631626ba7e916112c39185916065016125ed565b60206040518083038186803b1580156112db57600080fd5b505afa1580156112ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611313919061235f565b6001600160e01b031916631626ba7e60e01b146113685760405162461bcd60e51b815260206004820152601360248201527214d213d6554e8815539055551213d492569151606a1b60448201526064016103bf565b6113cf565b856001600160a01b031661138382878787611b92565b6001600160a01b0316146113cf5760405162461bcd60e51b815260206004820152601360248201527214d213d6554e8815539055551213d492569151606a1b60448201526064016103bf565b50505050505050565b60008181526003602052604090205460ff16156114375760405162461bcd60e51b815260206004820152601b60248201527f53484f59553a2043414e43454c4c45445f4f525f434c41494d4544000000000060448201526064016103bf565b81516001600160a01b03166114855760405162461bcd60e51b815260206004820152601460248201527329a427acaa9d1024a72b20a624a22fa6a0a5a2a960611b60448201526064016103bf565b60408201516001600160a01b03166114d45760405162461bcd60e51b815260206004820152601260248201527114d213d6554e881253959053125117d3919560721b60448201526064016103bf565b60008260800151116115205760405162461bcd60e51b815260206004820152601560248201527414d213d6554e881253959053125117d05353d55395605a1b60448201526064016103bf565b60a08201516001600160a01b031661157a5760405162461bcd60e51b815260206004820152601760248201527f53484f59553a20494e56414c49445f535452415445475900000000000000000060448201526064016103bf565b60c08201516001600160a01b03166115d45760405162461bcd60e51b815260206004820152601760248201527f53484f59553a20494e56414c49445f43555252454e435900000000000000000060448201526064016103bf565b7f000000000000000000000000000000000000000000000000000000000000000060a0830151604051632666e89f60e21b81526001600160a01b03918216600482015291169063999ba27c9060240160206040518083038186803b15801561163b57600080fd5b505afa15801561164f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167391906122f0565b6116bf5760405162461bcd60e51b815260206004820152601f60248201527f53484f59553a2053545241544547595f4e4f545f57484954454c49535445440060448201526064016103bf565b5050565b60006116d185853085611d25565b6116dd57506000611935565b60007f000000000000000000000000000000000000000000000000000000000000000090506000839050600080836001600160a01b031663aec0b5436040518163ffffffff1660e01b8152600401604080518083038186803b15801561174257600080fd5b505afa158015611756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177a91906122b7565b909250905060006103e861179160ff8416896126d6565b61179b91906126b6565b90506117b16001600160a01b038b168483611df7565b6117bb81856126f5565b9350505050600080836001600160a01b031663c2b11e186040518163ffffffff1660e01b8152600401604080518083038186803b1580156117fb57600080fd5b505afa15801561180f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183391906122b7565b909250905060006103e861184a60ff8416896126d6565b61185491906126b6565b905061186a6001600160a01b038b168483611df7565b61187481856126f5565b60405163152a902d60e11b8152600481018d9052602481018990529094506001600160a01b038d169350632a55205a92506044019050604080518083038186803b1580156118c157600080fd5b505afa9250505080156118f1575060408051601f3d908101601f191682019092526118ee9181019061228a565b60015b6118fa5761191a565b80156119175761190a81846126f5565b9250611917898383611e4e565b50505b61192e6001600160a01b0388168683611df7565b6001925050505b9695505050505050565b604051632142170760e11b81526001600160a01b0385811660048301528481166024830152604482018490528616906342842e0e90606401600060405180830381600087803b15801561199157600080fd5b505af11580156119a5573d6000803e3d6000fd5b505050505050505050565b606060006119bf8360026126d6565b6119ca90600261269e565b67ffffffffffffffff8111156119f057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611a1a576020820181803683370190505b509050600360fc1b81600081518110611a4357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a8057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611aa48460026126d6565b611aaf90600161269e565b90505b6001811115611b43576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611af157634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611b1557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611b3c81612738565b9050611ab2565b5083156107c45760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103bf565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115611c045760405162461bcd60e51b815260206004820181905260248201527f53484f59553a20494e56414c49445f5349474e41545552455f535f56414c554560448201526064016103bf565b8360ff16601b1480611c1957508360ff16601c145b611c655760405162461bcd60e51b815260206004820181905260248201527f53484f59553a20494e56414c49445f5349474e41545552455f565f56414c554560448201526064016103bf565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611cb9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d1c5760405162461bcd60e51b815260206004820152601860248201527f53484f59553a20494e56414c49445f5349474e4154555245000000000000000060448201526064016103bf565b95945050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691611d8b9190612547565b6000604051808303816000865af19150503d8060008114611dc8576040519150601f19603f3d011682016040523d82523d6000602084013e611dcd565b606091505b509150915081801561118357508051158061118357508080602001905181019061118391906122f0565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611e49908490611ee3565b505050565b611e626001600160a01b0384168383611df7565b813b15611e4957816001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ea457600080fd5b505af1925050508015611ed4575060408051601f3d908101601f19168201909252611ed191810190612503565b60015b611edd57611e49565b50505050565b6000611f38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611fb59092919063ffffffff16565b805190915015611e495780806020019051810190611f5691906122f0565b611e495760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103bf565b6060610be7848460008585843b61200e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103bf565b600080866001600160a01b0316858760405161202a9190612547565b60006040518083038185875af1925050503d8060008114612067576040519150601f19603f3d011682016040523d82523d6000602084013e61206c565b606091505b5091509150611183828286606083156120865750816107c4565b8251156120965782518084602001fd5b8160405162461bcd60e51b81526004016103bf9190612606565b80356105be81612796565b600082601f8301126120cb578081fd5b813567ffffffffffffffff8111156120e5576120e5612780565b6120f8601f8201601f191660200161266d565b81815284602083860101111561210c578283fd5b816020850160208301379081016020019190915292915050565b60006101a0808385031215612139578182fd5b6121428161266d565b91505061214e826120b0565b815261215c602083016120b0565b602082015261216d604083016120b0565b6040820152606082013560608201526080820135608082015261219260a083016120b0565b60a08201526121a360c083016120b0565b60c08201526121b460e083016120b0565b60e082015261010082810135908201526101208083013567ffffffffffffffff8111156121e057600080fd5b6121ec858286016120bb565b828401525050610140612200818401612222565b9082015261016082810135908201526101809182013591810191909152919050565b80356105be816127ae565b60006020828403121561223e578081fd5b81356107c481612796565b60008060006060848603121561225d578182fd5b833561226881612796565b925060208401359150604084013561227f81612796565b809150509250925092565b6000806040838503121561229c578182fd5b82516122a781612796565b6020939093015192949293505050565b600080604083850312156122c9578182fd5b82516122d481612796565b60208401519092506122e5816127ae565b809150509250929050565b600060208284031215612301578081fd5b815180151581146107c4578182fd5b600060208284031215612321578081fd5b5035919050565b60008060006060848603121561233c578283fd5b83359250602084013561234e81612796565b929592945050506040919091013590565b600060208284031215612370578081fd5b81516001600160e01b0319811681146107c4578182fd5b600060208284031215612398578081fd5b813567ffffffffffffffff8111156123ae578182fd5b610be784828501612126565b6000808284036101408112156123ce578283fd5b833567ffffffffffffffff8111156123e4578384fd5b6123f086828701612126565b93505061012080601f1983011215612406578283fd5b61240f8161266d565b915060208501358252612424604086016120b0565b6020830152606085013560408301526080850135606083015261244960a086016120b0565b608083015261245a60c086016120b0565b60a083015261246b60e08601612222565b60c08301526101008581013560e0840152940135938101939093525092909150565b600080600080600060a086880312156124a4578283fd5b853567ffffffffffffffff8111156124ba578384fd5b6124c688828901612126565b955050602086013593506040860135925060608601356124e581612796565b915060808601356124f581612796565b809150509295509295909350565b600060208284031215612514578081fd5b5051919050565b6000815180845261253381602086016020860161270c565b601f01601f19169290920160200192915050565b6000825161255981846020870161270c565b9190910192915050565b6001600160a01b03898116825260208201899052610100604083018190526000916125908483018b61251b565b9881166060850152608084019790975250509290931660a083015260c082015260e001529392505050565b6001600160a01b0395861681526020810194909452604084019290925283166060830152909116608082015260a00190565b600083825260406020830152610be7604083018461251b565b6000602082526107c4602083018461251b565b60208082526010908201526f29a427acaa9d102327a92124a22222a760811b604082015260600190565b60208082526010908201526f14d213d6554e8814915153951490539560821b604082015260600190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561269657612696612780565b604052919050565b600082198211156126b1576126b161276a565b500190565b6000826126d157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156126f0576126f061276a565b500290565b6000828210156127075761270761276a565b500390565b60005b8381101561272757818101518382015260200161270f565b83811115611edd5750506000910152565b6000816127475761274761276a565b506000190190565b60006000198214156127635761276361276a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146127ab57600080fd5b50565b60ff811681146127ab57600080fdfea26469706673582212209a490429f9230136afae50cdee25dc245cf7aa4e55f029801e8d1495ca003b3b64736f6c63430008030033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

export class ERC721ExchangeV0__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    factory_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721ExchangeV0> {
    return super.deploy(factory_, overrides || {}) as Promise<ERC721ExchangeV0>;
  }
  getDeployTransaction(
    factory_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(factory_, overrides || {});
  }
  attach(address: string): ERC721ExchangeV0 {
    return super.attach(address) as ERC721ExchangeV0;
  }
  connect(signer: Signer): ERC721ExchangeV0__factory {
    return super.connect(signer) as ERC721ExchangeV0__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ExchangeV0Interface {
    return new utils.Interface(_abi) as ERC721ExchangeV0Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ExchangeV0 {
    return new Contract(address, _abi, signerOrProvider) as ERC721ExchangeV0;
  }
}
