/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTStaticCallProxy,
  NFTStaticCallProxyInterface,
} from "../NFTStaticCallProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "SetTarget",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103cb806100206000396000f3fe60806040526004361061004e5760003560e01c8063715018a614610092578063776d1a01146100a95780638da5cb5b146100c9578063d4b839921461010a578063f2fde38b1461012a57610055565b3661005557005b6001546001600160a01b0316801561008f576040513680600083376000808284865afa90503d806000843e81801561008b578184f35b8184fd5b50005b34801561009e57600080fd5b506100a761014a565b005b3480156100b557600080fd5b506100a76100c436600461033d565b6101d4565b3480156100d557600080fd5b506100ee6000546201000090046001600160a01b031690565b6040516001600160a01b03909116815260200160405180910390f35b34801561011657600080fd5b506001546100ee906001600160a01b031681565b34801561013657600080fd5b506100a761014536600461033d565b61024e565b6000546201000090046001600160a01b031633146101835760405162461bcd60e51b815260040161017a9061036b565b60405180910390fd5b60008054604051620100009091046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805462010000600160b01b0319169055565b6000546201000090046001600160a01b031633146102045760405162461bcd60e51b815260040161017a9061036b565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f529334a1c6836c58fdfaae38f1bc5b62d6a69e91fc4181371b8cd8db71831ea790600090a250565b6000546201000090046001600160a01b0316331461027e5760405162461bcd60e51b815260040161017a9061036b565b6001600160a01b0381166102d45760405162461bcd60e51b815260206004820152601860248201527f53484f59553a20494e56414c49445f4e45575f4f574e45520000000000000000604482015260640161017a565b600080546040516001600160a01b03808516936201000090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b60006020828403121561034e578081fd5b81356001600160a01b0381168114610364578182fd5b9392505050565b60208082526010908201526f29a427acaa9d102327a92124a22222a760811b60408201526060019056fea2646970667358221220e33b947bb65abc96b0f220f17ce095b33cffcde30257ed2e5972af634885d62764736f6c63430008030033";

export class NFTStaticCallProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTStaticCallProxy> {
    return super.deploy(overrides || {}) as Promise<NFTStaticCallProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTStaticCallProxy {
    return super.attach(address) as NFTStaticCallProxy;
  }
  connect(signer: Signer): NFTStaticCallProxy__factory {
    return super.connect(signer) as NFTStaticCallProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTStaticCallProxyInterface {
    return new utils.Interface(_abi) as NFTStaticCallProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTStaticCallProxy {
    return new Contract(address, _abi, signerOrProvider) as NFTStaticCallProxy;
  }
}
