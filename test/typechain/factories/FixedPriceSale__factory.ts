/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FixedPriceSale,
  FixedPriceSaleInterface,
} from "../FixedPriceSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x379c470d",
        type: "bytes32",
      },
    ],
    name: "c_0x379c470d",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "canBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061076e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633c40e3e1146100465780635f11a72b146100625780636511995114610092575b600080fd5b610060600480360381019061005b919061041c565b6100c2565b005b61007c6004803603810190610077919061046e565b6100c5565b6040516100899190610556565b60405180910390f35b6100ac60048036038101906100a7919061046e565b61015a565b6040516100b99190610556565b60405180910390f35b50565b60006100f37f016453823ebabc8246c15746bcaa8591486a053bc4cea2c466bc0e6dd55f3bf660001b6100c2565b61011f7f4c83fe971fdb2184d308f638e58eacdca890283d8db07a2e35a21da74585408860001b6100c2565b61014b7f59922d352db59bcdaf470f6fc3d168528355cb29d4dce9dd1d878090adabef3260001b6100c2565b60009050979650505050505050565b60006101887f3fc437228bcd683b5e7159bbc5fa0583b6d9feca1db0a8e4807abba62842e8e460001b6100c2565b6101b47fff7c57022fb017ab407d3eb0257ad301feb35276ee23827254034be81ebf9c4b60001b6100c2565b6101e07f7295594dddbdaf1f691783d45bd7b405922118111d0078786130e88fe02cb28660001b6100c2565b6000878060200190518101906101f69190610445565b90506102247f0be3e96a2b04131e1443659142da11cdfb5511a901366319c6f66c213b824a6560001b6100c2565b6102507fb404e2bf613f3d623c4fb03c955a837ec1fa9ce192fccb574b681e1fdaac9f4260001b6100c2565b61027c7f9c1761f16bed8726928d5a8def08a7309874ac3bd422b6f8ad4afd824b1c6d1c60001b6100c2565b600081116102bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b690610571565b60405180910390fd5b6102eb7fb6593b1791bafd8fe9227390221394d5cbe138ee6ba8fd2bd96798b972ba1fd660001b6100c2565b6103177f5eaaa839951773ae0e5a2315a5af6d758407b23c977c70e716f6fa27b0bc0a5b60001b6100c2565b6103437f4da3a470c6e455833f6b87acdb1e87bafd67c0546c24607262dd7349a2e6170a60001b6100c2565b88431115801561035257508086145b915050979650505050505050565b600061037361036e846105b6565b610591565b90508281526020810184848401111561038b57600080fd5b61039684828561064a565b509392505050565b6000813590506103ad816106f3565b92915050565b6000813590506103c28161070a565b92915050565b600082601f8301126103d957600080fd5b81356103e9848260208601610360565b91505092915050565b60008135905061040181610721565b92915050565b60008151905061041681610721565b92915050565b60006020828403121561042e57600080fd5b600061043c848285016103b3565b91505092915050565b60006020828403121561045757600080fd5b600061046584828501610407565b91505092915050565b600080600080600080600060e0888a03121561048957600080fd5b60006104978a828b016103f2565b975050602088013567ffffffffffffffff8111156104b457600080fd5b6104c08a828b016103c8565b96505060406104d18a828b0161039e565b95505060606104e28a828b016103f2565b94505060806104f38a828b0161039e565b93505060a06105048a828b016103f2565b92505060c06105158a828b016103f2565b91505092959891949750929550565b61052d8161060a565b82525050565b60006105406014836105e7565b915061054b826106ca565b602082019050919050565b600060208201905061056b6000830184610524565b92915050565b6000602082019050818103600083015261058a81610533565b9050919050565b600061059b6105ac565b90506105a78282610659565b919050565b6000604051905090565b600067ffffffffffffffff8211156105d1576105d061068a565b5b6105da826106b9565b9050602081019050919050565b600082825260208201905092915050565b600061060382610620565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610662826106b9565b810181811067ffffffffffffffff821117156106815761068061068a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f53484f59553a20494e56414c49445f5052494345000000000000000000000000600082015250565b6106fc816105f8565b811461070757600080fd5b50565b61071381610616565b811461071e57600080fd5b50565b61072a81610640565b811461073557600080fd5b5056fea2646970667358221220ef05d5f3cd172822c8b0ed82ed513c69e4a37e02c5bbf358662dc8ca3858481264736f6c63430008030033";

export class FixedPriceSale__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FixedPriceSale> {
    return super.deploy(overrides || {}) as Promise<FixedPriceSale>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FixedPriceSale {
    return super.attach(address) as FixedPriceSale;
  }
  connect(signer: Signer): FixedPriceSale__factory {
    return super.connect(signer) as FixedPriceSale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedPriceSaleInterface {
    return new utils.Interface(_abi) as FixedPriceSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedPriceSale {
    return new Contract(address, _abi, signerOrProvider) as FixedPriceSale;
  }
}
