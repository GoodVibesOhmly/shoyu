/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155RoyaltyMock,
  ERC1155RoyaltyMockInterface,
} from "../ERC1155RoyaltyMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820190915260048152634d4f434b60e01b6020820152620000388162000051565b50600380546001600160a01b031916331790556200014d565b8051620000669060029060208401906200006a565b5050565b828054620000789062000110565b90600052602060002090601f0160209004810192826200009c5760008555620000e7565b82601f10620000b757805160ff1916838001178555620000e7565b82800160010185558215620000e7579182015b82811115620000e7578251825591602001919060010190620000ca565b50620000f5929150620000f9565b5090565b5b80821115620000f55760008155600101620000fa565b600181811c908216806200012557607f821691505b602082108114156200014757634e487b7160e01b600052602260045260246000fd5b50919050565b6119d7806200015d6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80634e1273f4116100715780634e1273f41461017b578063731133e91461019b5780638da5cb5b146101ae578063a22cb465146101d9578063e985e9c5146101ec578063f242432a14610228576100b3565b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c146101015780631f7fdffa146101215780632a55205a146101365780632eb2c2d614610168575b600080fd5b6100cb6100c6366004611303565b61023b565b6040519081526020015b60405180910390f35b6100f16100ec36600461144a565b6102d2565b60405190151581526020016100d5565b61011461010f366004611489565b6102ff565b6040516100d5919061162b565b61013461012f366004611234565b610393565b005b6101496101443660046114a1565b6103a5565b604080516001600160a01b0390931683526020830191909152016100d5565b61013461017636600461112b565b6103e6565b61018e61018936600461137f565b610689565b6040516100d591906115ea565b6101346101a936600461132c565b6107eb565b6003546101c1906001600160a01b031681565b6040516001600160a01b0390911681526020016100d5565b6101346101e73660046112c9565b6107f7565b6100f16101fa3660046110f9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346102363660046111d1565b61090b565b60006001600160a01b0383166102ac5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b600063152a902d60e11b6001600160e01b0319831614806102f757506102f782610ad8565b90505b919050565b60606002805461030e90611830565b80601f016020809104026020016040519081016040528092919081815260200182805461033a90611830565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b50505050509050919050565b61039f84848484610b28565b50505050565b6000806064600a8510156103b75750600a5b6003546001600160a01b03166103e86103d083876117fa565b6103da91906117da565b92509250509250929050565b81518351146104075760405162461bcd60e51b81526004016102a390611715565b6001600160a01b03841661042d5760405162461bcd60e51b81526004016102a390611686565b610435610c9a565b6001600160a01b0316856001600160a01b0316148061045b575061045b856101fa610c9a565b6104c25760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102a3565b60006104cc610c9a565b905060005b845181101561061b5760008582815181106104fc57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061052857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105785760405162461bcd60e51b81526004016102a3906116cb565b6105828282611819565b60008085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160008085815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461060091906117c2565b925050819055505050508061061490611898565b90506104d1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161066b9291906115fd565b60405180910390a4610681818787878787610c9f565b505050505050565b606081518351146106ee5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102a3565b6000835167ffffffffffffffff81111561071857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610741578160200160208202803683370190505b50905060005b84518110156107e3576107a885828151811061077357634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061079b57634e487b7160e01b600052603260045260246000fd5b602002602001015161023b565b8282815181106107c857634e487b7160e01b600052603260045260246000fd5b60209081029190910101526107dc81611898565b9050610747565b509392505050565b61039f84848484610e0a565b816001600160a01b0316610809610c9a565b6001600160a01b031614156108725760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102a3565b806001600061087f610c9a565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556108c3610c9a565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516108ff911515815260200190565b60405180910390a35050565b6001600160a01b0384166109315760405162461bcd60e51b81526004016102a390611686565b610939610c9a565b6001600160a01b0316856001600160a01b0316148061095f575061095f856101fa610c9a565b6109bd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102a3565b60006109c7610c9a565b90506109e88187876109d888610edc565b6109e188610edc565b5050505050565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610a295760405162461bcd60e51b81526004016102a3906116cb565b610a338482611819565b6000868152602081815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290610a6f9084906117c2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610acf828888888888610f35565b50505050505050565b60006001600160e01b03198216636cdb3d1360e11b1480610b0957506001600160e01b031982166303a24d0760e21b145b806102f757506301ffc9a760e01b6001600160e01b03198316146102f7565b6001600160a01b038416610b4e5760405162461bcd60e51b81526004016102a39061175d565b8151835114610b6f5760405162461bcd60e51b81526004016102a390611715565b6000610b79610c9a565b905060005b8451811015610c3257838181518110610ba757634e487b7160e01b600052603260045260246000fd5b6020026020010151600080878481518110610bd257634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610c1a91906117c2565b90915550819050610c2a81611898565b915050610b7e565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c839291906115fd565b60405180910390a46109e181600087878787610c9f565b335b90565b6001600160a01b0384163b156106815760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ce39089908990889088908890600401611547565b602060405180830381600087803b158015610cfd57600080fd5b505af1925050508015610d2d575060408051601f3d908101601f19168201909252610d2a9181019061146d565b60015b610dda57610d396118df565b806308c379a01415610d735750610d4e6118f6565b80610d595750610d75565b8060405162461bcd60e51b81526004016102a3919061162b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102a3565b6001600160e01b0319811663bc197c8160e01b14610acf5760405162461bcd60e51b81526004016102a39061163e565b6001600160a01b038416610e305760405162461bcd60e51b81526004016102a39061175d565b6000610e3a610c9a565b9050610e4c816000876109d888610edc565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610e7c9084906117c2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109e181600087878787610f35565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f2457634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156106815760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610f7990899089908890889088906004016115a5565b602060405180830381600087803b158015610f9357600080fd5b505af1925050508015610fc3575060408051601f3d908101601f19168201909252610fc09181019061146d565b60015b610fcf57610d396118df565b6001600160e01b0319811663f23a6e6160e01b14610acf5760405162461bcd60e51b81526004016102a39061163e565b80356001600160a01b03811681146102fa57600080fd5b600082601f830112611026578081fd5b813560206110338261179e565b604051611040828261186b565b8381528281019150858301600585901b8701840188101561105f578586fd5b855b8581101561107d57813584529284019290840190600101611061565b5090979650505050505050565b600082601f83011261109a578081fd5b813567ffffffffffffffff8111156110b4576110b46118c9565b6040516110cb601f8301601f19166020018261186b565b8181528460208386010111156110df578283fd5b816020850160208301379081016020019190915292915050565b6000806040838503121561110b578182fd5b61111483610fff565b915061112260208401610fff565b90509250929050565b600080600080600060a08688031215611142578081fd5b61114b86610fff565b945061115960208701610fff565b9350604086013567ffffffffffffffff80821115611175578283fd5b61118189838a01611016565b94506060880135915080821115611196578283fd5b6111a289838a01611016565b935060808801359150808211156111b7578283fd5b506111c48882890161108a565b9150509295509295909350565b600080600080600060a086880312156111e8578081fd5b6111f186610fff565b94506111ff60208701610fff565b93506040860135925060608601359150608086013567ffffffffffffffff811115611228578182fd5b6111c48882890161108a565b60008060008060808587031215611249578384fd5b61125285610fff565b9350602085013567ffffffffffffffff8082111561126e578485fd5b61127a88838901611016565b9450604087013591508082111561128f578384fd5b61129b88838901611016565b935060608701359150808211156112b0578283fd5b506112bd8782880161108a565b91505092959194509250565b600080604083850312156112db578182fd5b6112e483610fff565b9150602083013580151581146112f8578182fd5b809150509250929050565b60008060408385031215611315578182fd5b61131e83610fff565b946020939093013593505050565b60008060008060808587031215611341578384fd5b61134a85610fff565b93506020850135925060408501359150606085013567ffffffffffffffff811115611373578182fd5b6112bd8782880161108a565b60008060408385031215611391578182fd5b823567ffffffffffffffff808211156113a8578384fd5b818501915085601f8301126113bb578384fd5b813560206113c88261179e565b6040516113d5828261186b565b8381528281019150858301600585901b870184018b10156113f4578889fd5b8896505b8487101561141d5761140981610fff565b8352600196909601959183019183016113f8565b5096505086013592505080821115611433578283fd5b5061144085828601611016565b9150509250929050565b60006020828403121561145b578081fd5b813561146681611988565b9392505050565b60006020828403121561147e578081fd5b815161146681611988565b60006020828403121561149a578081fd5b5035919050565b600080604083850312156114b3578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b838110156114f1578151875295820195908201906001016114d5565b509495945050505050565b60008151808452815b8181101561152157602081850181015186830182015201611505565b818111156115325782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611573908301866114c2565b828103606084015261158581866114c2565b9050828103608084015261159981856114fc565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906115df908301846114fc565b979650505050505050565b60006020825261146660208301846114c2565b60006040825261161060408301856114c2565b828103602084015261162281856114c2565b95945050505050565b60006020825261146660208301846114fc565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff8211156117b8576117b86118c9565b5060051b60200190565b600082198211156117d5576117d56118b3565b500190565b6000826117f557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611814576118146118b3565b500290565b60008282101561182b5761182b6118b3565b500390565b600181811c9082168061184457607f821691505b6020821081141561186557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611891576118916118c9565b6040525050565b60006000198214156118ac576118ac6118b3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115610c9c57600481823e5160e01c90565b600060443d101561190657610c9c565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611938575050505050610c9c565b828501915081518181111561195257505050505050610c9c565b843d870101602082850101111561196e57505050505050610c9c565b61197d6020828601018761186b565b509094505050505090565b6001600160e01b03198116811461199e57600080fd5b5056fea26469706673582212207513c5e24cf01fadbe694d87337d2f6ba8035fde520d1449c443d56fac62e28c64736f6c63430008030033";

export class ERC1155RoyaltyMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155RoyaltyMock> {
    return super.deploy(overrides || {}) as Promise<ERC1155RoyaltyMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155RoyaltyMock {
    return super.attach(address) as ERC1155RoyaltyMock;
  }
  connect(signer: Signer): ERC1155RoyaltyMock__factory {
    return super.connect(signer) as ERC1155RoyaltyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155RoyaltyMockInterface {
    return new utils.Interface(_abi) as ERC1155RoyaltyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155RoyaltyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155RoyaltyMock;
  }
}
