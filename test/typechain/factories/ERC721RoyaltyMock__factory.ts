/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721RoyaltyMock,
  ERC721RoyaltyMockInterface,
} from "../ERC721RoyaltyMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenId",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeMintBatch0",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenId",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeMintBatch1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051806040016040528060048152602001634d6f636b60e01b815250604051806040016040528060048152602001634d4f434b60e01b81525081600090805190602001906200006492919062000095565b5080516200007a90600190602084019062000095565b5050600680546001600160a01b031916331790555062000178565b828054620000a3906200013b565b90600052602060002090601f016020900481019282620000c7576000855562000112565b82601f10620000e257805160ff191683800117855562000112565b8280016001018555821562000112579182015b8281111562000112578251825591602001919060010190620000f5565b506200012092915062000124565b5090565b5b8082111562000120576000815560010162000125565b600181811c908216806200015057607f821691505b602082108114156200017257634e487b7160e01b600052602260045260246000fd5b50919050565b6117c080620001886000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610265578063a8d337e914610278578063b88d4fde1461028b578063c87b56dd1461029e578063e985e9c5146102b157610116565b806370a08231146102165780638832e6e3146102375780638da5cb5b1461024a57806395d89b411461025d57610116565b806313d75cee116100e957806313d75cee1461019857806323b872dd146101ab5780632a55205a146101be57806342842e0e146101f05780636352211e1461020357610116565b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004611478565b6102ed565b60405190151581526020015b60405180910390f35b61014b61031a565b60405161013a9190611581565b61016b6101663660046114b0565b6103ac565b6040516001600160a01b03909116815260200161013a565b61019661019136600461136a565b610446565b005b6101966101a63660046113e8565b61055c565b6101966101b9366004611224565b6105f2565b6101d16101cc3660046114c8565b610623565b604080516001600160a01b03909316835260208301919091520161013a565b6101966101fe366004611224565b610665565b61016b6102113660046114b0565b610680565b6102296102243660046111d8565b6106f7565b60405190815260200161013a565b610196610245366004611393565b61077e565b60065461016b906001600160a01b031681565b61014b610789565b610196610273366004611330565b610798565b6101966102863660046112c5565b61086a565b61019661029936600461125f565b6108b2565b61014b6102ac3660046114b0565b6108ea565b61012e6102bf3660046111f2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600063152a902d60e11b6001600160e01b0319831614806103125750610312826109d2565b90505b919050565b606060008054610329906116c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610355906116c5565b80156103a25780601f10610377576101008083540402835291602001916103a2565b820191906000526020600020905b81548152906001019060200180831161038557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661042a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061045182610680565b9050806001600160a01b0316836001600160a01b031614156104bf5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610421565b336001600160a01b03821614806104db57506104db81336102bf565b61054d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610421565b6105578383610a22565b505050565b83821461056857600080fd5b60005b848110156105ea576105d886868381811061059657634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105ab91906111d8565b8585848181106105cb57634e487b7160e01b600052603260045260246000fd5b9050602002013584610a90565b806105e281611700565b91505061056b565b505050505050565b6105fc3382610ac3565b6106185760405162461bcd60e51b8152600401610421906115e6565b610557838383610bba565b6000806064600a8510156106355750600a5b6006546001600160a01b03166103e861064e8387611663565b610658919061164f565b92509250505b9250929050565b610557838383604051806020016040528060008152506108b2565b6000818152600260205260408120546001600160a01b0316806103125760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610421565b60006001600160a01b0382166107625760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610421565b506001600160a01b031660009081526003602052604090205490565b610557838383610a90565b606060018054610329906116c5565b6001600160a01b0382163314156107f15760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610421565b3360008181526005602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161085e911515815260200190565b60405180910390a35050565b60005b828110156108ab57610899858585848181106105cb57634e487b7160e01b600052603260045260246000fd5b806108a381611700565b91505061086d565b5050505050565b6108bc3383610ac3565b6108d85760405162461bcd60e51b8152600401610421906115e6565b6108e484848484610d5a565b50505050565b6000818152600260205260409020546060906001600160a01b03166109695760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610421565b600061098060408051602081019091526000815290565b905060008151116109a057604051806020016040528060008152506109cb565b806109aa84610d8d565b6040516020016109bb929190611515565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480610a0357506001600160e01b03198216635b5e139f60e01b145b8061031257506301ffc9a760e01b6001600160e01b0319831614610312565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a5782610680565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610a9a8383610ea8565b610aa76000848484610fea565b6105575760405162461bcd60e51b815260040161042190611594565b6000818152600260205260408120546001600160a01b0316610b3c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610421565b6000610b4783610680565b9050806001600160a01b0316846001600160a01b03161480610b825750836001600160a01b0316610b77846103ac565b6001600160a01b0316145b80610bb257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610bcd82610680565b6001600160a01b031614610c355760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610421565b6001600160a01b038216610c975760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610421565b610ca2600082610a22565b6001600160a01b0383166000908152600360205260408120805460019290610ccb908490611682565b90915550506001600160a01b0382166000908152600360205260408120805460019290610cf9908490611637565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d65848484610bba565b610d7184848484610fea565b6108e45760405162461bcd60e51b815260040161042190611594565b606081610db257506040805180820190915260018152600360fc1b6020820152610315565b8160005b8115610ddc5780610dc681611700565b9150610dd59050600a8361164f565b9150610db6565b60008167ffffffffffffffff811115610e0557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e2f576020820181803683370190505b5090505b8415610bb257610e44600183611682565b9150610e51600a8661171b565b610e5c906030611637565b60f81b818381518110610e7f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610ea1600a8661164f565b9450610e33565b6001600160a01b038216610efe5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610421565b6000818152600260205260409020546001600160a01b031615610f635760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610421565b6001600160a01b0382166000908152600360205260408120805460019290610f8c908490611637565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156110ec57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061102e903390899088908890600401611544565b602060405180830381600087803b15801561104857600080fd5b505af1925050508015611078575060408051601f3d908101601f1916820190925261107591810190611494565b60015b6110d2573d8080156110a6576040519150601f19603f3d011682016040523d82523d6000602084013e6110ab565b606091505b5080516110ca5760405162461bcd60e51b815260040161042190611594565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bb2565b506001949350505050565b80356001600160a01b038116811461031557600080fd5b60008083601f84011261111f578081fd5b50813567ffffffffffffffff811115611136578182fd5b6020830191508360208260051b850101111561065e57600080fd5b600082601f830112611161578081fd5b813567ffffffffffffffff8082111561117c5761117c61175b565b604051601f8301601f19908116603f011681019082821181831017156111a4576111a461175b565b816040528381528660208588010111156111bc578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156111e9578081fd5b6109cb826110f7565b60008060408385031215611204578081fd5b61120d836110f7565b915061121b602084016110f7565b90509250929050565b600080600060608486031215611238578081fd5b611241846110f7565b925061124f602085016110f7565b9150604084013590509250925092565b60008060008060808587031215611274578081fd5b61127d856110f7565b935061128b602086016110f7565b925060408501359150606085013567ffffffffffffffff8111156112ad578182fd5b6112b987828801611151565b91505092959194509250565b600080600080606085870312156112da578384fd5b6112e3856110f7565b9350602085013567ffffffffffffffff808211156112ff578485fd5b61130b8883890161110e565b90955093506040870135915080821115611323578283fd5b506112b987828801611151565b60008060408385031215611342578182fd5b61134b836110f7565b91506020830135801515811461135f578182fd5b809150509250929050565b6000806040838503121561137c578182fd5b611385836110f7565b946020939093013593505050565b6000806000606084860312156113a7578283fd5b6113b0846110f7565b925060208401359150604084013567ffffffffffffffff8111156113d2578182fd5b6113de86828701611151565b9150509250925092565b6000806000806000606086880312156113ff578081fd5b853567ffffffffffffffff80821115611416578283fd5b61142289838a0161110e565b9097509550602088013591508082111561143a578283fd5b61144689838a0161110e565b9095509350604088013591508082111561145e578283fd5b5061146b88828901611151565b9150509295509295909350565b600060208284031215611489578081fd5b81356109cb81611771565b6000602082840312156114a5578081fd5b81516109cb81611771565b6000602082840312156114c1578081fd5b5035919050565b600080604083850312156114da578081fd5b50508035926020909101359150565b60008151808452611501816020860160208601611699565b601f01601f19169290920160200192915050565b60008351611527818460208801611699565b83519083019061153b818360208801611699565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611577908301846114e9565b9695505050505050565b6000602082526109cb60208301846114e9565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561164a5761164a61172f565b500190565b60008261165e5761165e611745565b500490565b600081600019048311821515161561167d5761167d61172f565b500290565b6000828210156116945761169461172f565b500390565b60005b838110156116b457818101518382015260200161169c565b838111156108e45750506000910152565b600181811c908216806116d957607f821691505b602082108114156116fa57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117145761171461172f565b5060010190565b60008261172a5761172a611745565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461178757600080fd5b5056fea264697066735822122023afecc0551ac12a9b08dd4bbab0163933c02d6cae10746f32a467eb3e8048cd64736f6c63430008030033";

export class ERC721RoyaltyMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721RoyaltyMock> {
    return super.deploy(overrides || {}) as Promise<ERC721RoyaltyMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721RoyaltyMock {
    return super.attach(address) as ERC721RoyaltyMock;
  }
  connect(signer: Signer): ERC721RoyaltyMock__factory {
    return super.connect(signer) as ERC721RoyaltyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721RoyaltyMockInterface {
    return new utils.Interface(_abi) as ERC721RoyaltyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721RoyaltyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC721RoyaltyMock;
  }
}
