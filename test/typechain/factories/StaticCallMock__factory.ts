/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StaticCallMock,
  StaticCallMockInterface,
} from "../StaticCallMock";

const _abi = [
  {
    inputs: [],
    name: "globalV",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "pureTest11",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "pureTest23",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "setY",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "viewTest11",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "viewTest13",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "x",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "y",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635db55a31116100665780635db55a31146101245780636259e7e114610132578063820e7018146101525780639c2e217014610178578063a94a99a11461019857610093565b806326ecd73814610098578063359b6ad9146100c35780633b87482a146100e25780633f4263ef14610104575b600080fd5b6100ab6100a63660046103b8565b6101ab565b6040516100ba93929190610514565b60405180910390f35b6100d46100d13660046103b8565b90565b6040519081526020016100ba565b6101026100f0366004610447565b60009182526020829052604090912055565b005b6100d46101123660046103b8565b60006020819052908152604090205481565b6040513081526020016100ba565b6101456101403660046103b8565b610266565b6040516100ba91906104b3565b6101686101603660046103d0565b826001935093565b6040516100ba94939291906104cd565b6100d46101863660046103b8565b60009081526020819052604090205490565b6101026101a63660046103d0565b610300565b600081815260208181526040808320546001909252822080548392606092909130919081906101d990610547565b80601f016020809104026020016040519081016040528092919081815260200182805461020590610547565b80156102525780601f1061022757610100808354040283529160200191610252565b820191906000526020600020905b81548152906001019060200180831161023557829003601f168201915b505050505090509250925092509193909250565b6001602052600090815260409020805461027f90610547565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90610547565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b505050505081565b600083815260016020526040902061031990838361031f565b50505050565b82805461032b90610547565b90600052602060002090601f01602090048101928261034d5760008555610393565b82601f106103665782800160ff19823516178555610393565b82800160010185558215610393579182015b82811115610393578235825591602001919060010190610378565b5061039f9291506103a3565b5090565b5b8082111561039f57600081556001016103a4565b6000602082840312156103c9578081fd5b5035919050565b6000806000604084860312156103e4578182fd5b83359250602084013567ffffffffffffffff80821115610402578384fd5b818601915086601f830112610415578384fd5b813581811115610423578485fd5b876020828501011115610434578485fd5b6020830194508093505050509250925092565b60008060408385031215610459578182fd5b50508035926020909101359150565b60008151808452815b8181101561048d57602081850181015186830182015201610471565b8181111561049e5782602083870101525b50601f01601f19169290920160200192915050565b6000602082526104c66020830184610468565b9392505050565b8481526001600160a01b03841660208201526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b8381526001600160a01b038316602082015260606040820181905260009061053e90830184610468565b95945050505050565b600181811c9082168061055b57607f821691505b6020821081141561057c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b686b0ec9ca9a92b0efb578e3caf3793691244eb10681741046f2537a224296864736f6c63430008030033";

export class StaticCallMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StaticCallMock> {
    return super.deploy(overrides || {}) as Promise<StaticCallMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StaticCallMock {
    return super.attach(address) as StaticCallMock;
  }
  connect(signer: Signer): StaticCallMock__factory {
    return super.connect(signer) as StaticCallMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticCallMockInterface {
    return new utils.Interface(_abi) as StaticCallMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StaticCallMock {
    return new Contract(address, _abi, signerOrProvider) as StaticCallMock;
  }
}
