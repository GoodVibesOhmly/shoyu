/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Mock, ERC1155MockInterface } from "../ERC1155Mock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820190915260048152634d4f434b60e01b602082015262000038816200003f565b506200013b565b80516200005490600290602084019062000058565b5050565b8280546200006690620000fe565b90600052602060002090601f0160209004810192826200008a5760008555620000d5565b82601f10620000a557805160ff1916838001178555620000d5565b82800160010185558215620000d5579182015b82811115620000d5578251825591602001919060010190620000b8565b50620000e3929150620000e7565b5090565b5b80821115620000e35760008155600101620000e8565b600181811c908216806200011357607f821691505b602082108114156200013557634e487b7160e01b600052602260045260246000fd5b50919050565b61189a806200014b6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634e1273f4116100665780634e1273f414610133578063731133e914610153578063a22cb46514610166578063e985e9c514610179578063f242432a146101b55761009d565b8062fdd58e146100a257806301ffc9a7146100c85780630e89341c146100eb5780631f7fdffa1461010b5780632eb2c2d614610120575b600080fd5b6100b56100b0366004611226565b6101c8565b6040519081526020015b60405180910390f35b6100db6100d636600461136d565b61025f565b60405190151581526020016100bf565b6100fe6100f93660046113ac565b6102b3565b6040516100bf919061152d565b61011e610119366004611157565b610347565b005b61011e61012e36600461104e565b610359565b6101466101413660046112a2565b6105fc565b6040516100bf91906114ec565b61011e61016136600461124f565b61075e565b61011e6101743660046111ec565b61076a565b6100db61018736600461101c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61011e6101c33660046110f4565b61087e565b60006001600160a01b0383166102395760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061029057506001600160e01b031982166303a24d0760e21b145b806102ab57506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6060600280546102c2906116f3565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee906116f3565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b50505050509050919050565b61035384848484610a4b565b50505050565b815183511461037a5760405162461bcd60e51b815260040161023090611617565b6001600160a01b0384166103a05760405162461bcd60e51b815260040161023090611588565b6103a8610bbd565b6001600160a01b0316856001600160a01b031614806103ce57506103ce85610187610bbd565b6104355760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610230565b600061043f610bbd565b905060005b845181101561058e57600085828151811061046f57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061049b57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156104eb5760405162461bcd60e51b8152600401610230906115cd565b6104f582826116dc565b60008085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160008085815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461057391906116c4565b92505081905550505050806105879061175b565b9050610444565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516105de9291906114ff565b60405180910390a46105f4818787878787610bc2565b505050505050565b606081518351146106615760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610230565b6000835167ffffffffffffffff81111561068b57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106b4578160200160208202803683370190505b50905060005b84518110156107565761071b8582815181106106e657634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061070e57634e487b7160e01b600052603260045260246000fd5b60200260200101516101c8565b82828151811061073b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261074f8161175b565b90506106ba565b509392505050565b61035384848484610d2d565b816001600160a01b031661077c610bbd565b6001600160a01b031614156107e55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610230565b80600160006107f2610bbd565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610836610bbd565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610872911515815260200190565b60405180910390a35050565b6001600160a01b0384166108a45760405162461bcd60e51b815260040161023090611588565b6108ac610bbd565b6001600160a01b0316856001600160a01b031614806108d257506108d285610187610bbd565b6109305760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610230565b600061093a610bbd565b905061095b81878761094b88610dff565b61095488610dff565b5050505050565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561099c5760405162461bcd60e51b8152600401610230906115cd565b6109a684826116dc565b6000868152602081815260408083206001600160a01b038c811685529252808320939093558816815290812080548692906109e29084906116c4565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a42828888888888610e58565b50505050505050565b6001600160a01b038416610a715760405162461bcd60e51b81526004016102309061165f565b8151835114610a925760405162461bcd60e51b815260040161023090611617565b6000610a9c610bbd565b905060005b8451811015610b5557838181518110610aca57634e487b7160e01b600052603260045260246000fd5b6020026020010151600080878481518110610af557634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610b3d91906116c4565b90915550819050610b4d8161175b565b915050610aa1565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ba69291906114ff565b60405180910390a461095481600087878787610bc2565b335b90565b6001600160a01b0384163b156105f45760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c069089908990889088908890600401611449565b602060405180830381600087803b158015610c2057600080fd5b505af1925050508015610c50575060408051601f3d908101601f19168201909252610c4d91810190611390565b60015b610cfd57610c5c6117a2565b806308c379a01415610c965750610c716117b9565b80610c7c5750610c98565b8060405162461bcd60e51b8152600401610230919061152d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610230565b6001600160e01b0319811663bc197c8160e01b14610a425760405162461bcd60e51b815260040161023090611540565b6001600160a01b038416610d535760405162461bcd60e51b81526004016102309061165f565b6000610d5d610bbd565b9050610d6f8160008761094b88610dff565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610d9f9084906116c4565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461095481600087878787610e58565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610e4757634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156105f45760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e9c90899089908890889088906004016114a7565b602060405180830381600087803b158015610eb657600080fd5b505af1925050508015610ee6575060408051601f3d908101601f19168201909252610ee391810190611390565b60015b610ef257610c5c6117a2565b6001600160e01b0319811663f23a6e6160e01b14610a425760405162461bcd60e51b815260040161023090611540565b80356001600160a01b03811681146102ae57600080fd5b600082601f830112610f49578081fd5b81356020610f56826116a0565b604051610f63828261172e565b8381528281019150858301600585901b87018401881015610f82578586fd5b855b85811015610fa057813584529284019290840190600101610f84565b5090979650505050505050565b600082601f830112610fbd578081fd5b813567ffffffffffffffff811115610fd757610fd761178c565b604051610fee601f8301601f19166020018261172e565b818152846020838601011115611002578283fd5b816020850160208301379081016020019190915292915050565b6000806040838503121561102e578182fd5b61103783610f22565b915061104560208401610f22565b90509250929050565b600080600080600060a08688031215611065578081fd5b61106e86610f22565b945061107c60208701610f22565b9350604086013567ffffffffffffffff80821115611098578283fd5b6110a489838a01610f39565b945060608801359150808211156110b9578283fd5b6110c589838a01610f39565b935060808801359150808211156110da578283fd5b506110e788828901610fad565b9150509295509295909350565b600080600080600060a0868803121561110b578081fd5b61111486610f22565b945061112260208701610f22565b93506040860135925060608601359150608086013567ffffffffffffffff81111561114b578182fd5b6110e788828901610fad565b6000806000806080858703121561116c578384fd5b61117585610f22565b9350602085013567ffffffffffffffff80821115611191578485fd5b61119d88838901610f39565b945060408701359150808211156111b2578384fd5b6111be88838901610f39565b935060608701359150808211156111d3578283fd5b506111e087828801610fad565b91505092959194509250565b600080604083850312156111fe578182fd5b61120783610f22565b91506020830135801515811461121b578182fd5b809150509250929050565b60008060408385031215611238578182fd5b61124183610f22565b946020939093013593505050565b60008060008060808587031215611264578384fd5b61126d85610f22565b93506020850135925060408501359150606085013567ffffffffffffffff811115611296578182fd5b6111e087828801610fad565b600080604083850312156112b4578182fd5b823567ffffffffffffffff808211156112cb578384fd5b818501915085601f8301126112de578384fd5b813560206112eb826116a0565b6040516112f8828261172e565b8381528281019150858301600585901b870184018b1015611317578889fd5b8896505b848710156113405761132c81610f22565b83526001969096019591830191830161131b565b5096505086013592505080821115611356578283fd5b5061136385828601610f39565b9150509250929050565b60006020828403121561137e578081fd5b81356113898161184b565b9392505050565b6000602082840312156113a1578081fd5b81516113898161184b565b6000602082840312156113bd578081fd5b5035919050565b6000815180845260208085019450808401835b838110156113f3578151875295820195908201906001016113d7565b509495945050505050565b60008151808452815b8181101561142357602081850181015186830182015201611407565b818111156114345782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611475908301866113c4565b828103606084015261148781866113c4565b9050828103608084015261149b81856113fe565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114e1908301846113fe565b979650505050505050565b60006020825261138960208301846113c4565b60006040825261151260408301856113c4565b828103602084015261152481856113c4565b95945050505050565b60006020825261138960208301846113fe565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff8211156116ba576116ba61178c565b5060051b60200190565b600082198211156116d7576116d7611776565b500190565b6000828210156116ee576116ee611776565b500390565b600181811c9082168061170757607f821691505b6020821081141561172857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156117545761175461178c565b6040525050565b600060001982141561176f5761176f611776565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115610bbf57600481823e5160e01c90565b600060443d10156117c957610bbf565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156117fb575050505050610bbf565b828501915081518181111561181557505050505050610bbf565b843d870101602082850101111561183157505050505050610bbf565b6118406020828601018761172e565b509094505050505090565b6001600160e01b03198116811461186157600080fd5b5056fea264697066735822122068199cba44284776572932b353d79fb30223f9fbdfc9f4d22133a59d1fa29b3f64736f6c63430008030033";

export class ERC1155Mock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Mock> {
    return super.deploy(overrides || {}) as Promise<ERC1155Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Mock {
    return super.attach(address) as ERC1155Mock;
  }
  connect(signer: Signer): ERC1155Mock__factory {
    return super.connect(signer) as ERC1155Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MockInterface {
    return new utils.Interface(_abi) as ERC1155MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mock;
  }
}
